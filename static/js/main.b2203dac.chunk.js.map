{"version":3,"sources":["components/discover/songCard.js","components/discover/songGrid.js","config/fbConfig.js","store/actions/authActions.js","components/discover/tokenHandler.js","components/discover/cancellablePromise.js","components/discover/discover.js","components/layout/login/signup.js","components/layout/login/signin.js","components/layout/login/loginForm.js","components/layout/login/login.js","components/feed/postSummary.js","components/feed/postList.js","components/feed/feed.js","components/createPost.js","store/actions/postActions.js","components/profile/friendList.js","components/profile/modalUploadPicture.js","components/profile/profile.js","components/profile/pendingList.js","components/layout/sideNavbar.js","components/404.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SongCard","state","isOpen","handleOpen","setState","timeout","setTimeout","handleClose","clearTimeout","makePost","create_url","props","window","location","href","this","_token","url","uri","deviceid","type","account_type","fetch","method","headers","authorization","query","body","JSON","stringify","uris","context_uri","open","title","artist","album","art_url","player_connected","listen_button","Button","fluid","positive","onClick","playSong","Popup","trigger","basic","color","content","on","onClose","onOpen","position","Card","centered","raised","Content","floated","icon","Header","Meta","Image","src","extra","Component","SongGrid","song_info","Array","isArray","song_cards","map","info","index","Grid","Column","stretched","key","rows","Math","ceil","length","fill","currValue","Row","slice","columns","SongInfo","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","acceptFriend","friend_user_id","logged_in_user_id","dispatch","getState","getFirebase","firestore","getFirestore","collection","doc","update","friends_pending","FieldValue","arrayRemove","friends","arrayUnion","then","catch","err","TokenHandler","token","getHashParams","access_token","error","URLSearchParams","search","get","e","hashParams","r","q","hash","substring","exec","decodeURIComponent","handleToken","auth","isEmpty","updateToken","uid","history","push","className","as","textAlign","Divider","hidden","Icon","name","Loader","active","size","connect","uId","callback","spotify_token","makeCancellable","promise","isCancelled","Promise","resolve","reject","val","cancel","spotifyApi","SpotifyWebApi","spotifyUrl","encodeURIComponent","join","base_url","Discover","handleSearchChange","value","results","searchButton","searchTracks","searchedTracks","tracks","items","searchArtists","searchedArtists","artists","searchAlbums","searchedAlbums","albums","searchPlaylists","searchedPlaylists","playlists","onPrevClick","player","previousTrack","onPlayClick","togglePlay","onNextClick","nextTrack","createPost","undefined","trackUrl","trackName","loggedIn","newReleases","recentlyPlayed","topTracks","deviceId","artistName","albumName","playing","duration","albumArt","accountTypePromise","newReleasesPromise","recentSongsPromise","topTracksPromise","searchTracksPromise","searchArtistsPromise","searchAlbumsPromise","searchPlaylistsPromise","initializeOnceMounted","route","disconnect","clearInterval","getToken","getAccessToken","setAccessToken","getAccountType","getNewReleases","getRecentSongs","getTopTracks","playerCheckInterval","listen","onRouteChange","bind","setInterval","initialize","promises","i","accountType","getMe","data","product","console","log","status","confirm","limit","offset","country","recentSongs","getMyRecentlyPlayedTracks","getMyTopTracks","keyword","Spotify","Player","getOAuthToken","cb","createEventHandlers","checkForPlayer","onStateChanged","a","async","device_id","transferPlaybackHere","track_window","currentTrack","current_track","id","paused","images","searchResults","newAlbums","recents","top","min","owner","display_name","external_urls","spotify","track","Menu","Item","inverted","checkForPlayer_driver","Search","showNoResults","onSearchChange","_","debounce","placeholder","Group","labeled","secondary","style","whiteSpace","charAt","toUpperCase","align","fontSize","expand","expandSection","nextProps","prevState","profile","isLoaded","SongSection","Container","SignUp","email","password","submit","signUp","change","target","authError","Form","onSubmit","Field","Input","label","onChange","control","ButtonContent","newUser","createUserWithEmailAndPassword","resp","user","set","privacy","imageUrl","SignIn","signIn","creds","credentials","signInWithEmailAndPassword","LoginForm","signing_up","sign_up","word","signing_area","Or","Segment","Login","to","padded","GridRow","PostSummary","post","users","filter","authorId","summary","author","song","rating","Event","image","date","moment","createdAt","toDate","format","extraText","comment","PostList","posts","Feed","friendsPosts","explorePosts","feedPanes","menuItem","render","Tab","Pane","panes","newPosts","Object","assign","compose","currentFriendsList","ordered","sortedFriendsArray","sort","b","publicPosts","sortedExploreArray","firestoreConnect","storeAs","where","CreatePost","handleChange","handleRating","handleSubmit","preventDefault","toggle","params","songName","SongName","songUrl","SongUrl","text","widths","required","readOnly","disabled","Radio","defaultChecked","Dropdown","inline","options","TextArea","Post","add","Date","FriendList","friend","friend_info","fitted","ModalUploadPicture","isUploading","progress","imageURL","handleUploadStart","handleProgress","handleUploadError","handleUploadSuccess","filename","storage","ref","child","getDownloadURL","updateImage","handleModalClose","previousImageUrl","Modal","circular","bordered","closeOnDimmerClick","closeOnDocumentClick","divided","wrapped","width","accept","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","Progress","percent","success","Actions","Profile","posts_content","friends_content","navigate","destination","handleSubmitPrivacy","updateProfile","togglePrivacy","new_privacy","match","curProfilePosts","curProfileUser","isUser","friendButton","addFriend","includes","removeFriend","profile_panes","labelPosition","Label","compact","GridColumn","isLoading","curPrivatePosts","curPublicPosts","concat","profile_user_id","newInfo","PendingList","rejectFriend","friend_requests","user_info","List","animated","relaxed","verticalAlign","avatar","Description","SideNavbar","LOGIN","PROFILE","DISCOVER","FEED","REQUESTS","redirect_target","targets","visible","load","imageTop","alt","imageBot","requests_num","requests","output","fixed","header","Sidebar","Pushable","animation","direction","vertical","onHide","signOut","Pusher","dimmed","to_link","NotFound","App","exact","path","component","showLogin","basename","Boolean","hostname","initState","authReducer","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2203dac.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Button, Image, Popup } from 'semantic-ui-react'\r\n\r\n\r\nconst timeoutLength = 1500\r\n\r\nclass SongCard extends Component {\r\n\r\n    state = { isOpen: false }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ isOpen: true })\r\n\r\n        this.timeout = setTimeout(() => {\r\n        this.setState({ isOpen: false })\r\n        }, timeoutLength)\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false })\r\n        clearTimeout(this.timeout)\r\n    }\r\n\r\n    playSong(){\r\n        let { _token, url, uri, deviceid, type, account_type } = this.props;\r\n\r\n        if (account_type === 'premium') {          \r\n            if(type === \"track\"){\r\n                fetch(\"https://api.spotify.com/v1/me/player/play\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    authorization: `Bearer ${_token}`,\r\n                },\r\n                query:{\r\n                    \"device_id\":deviceid\r\n                },\r\n                body: JSON.stringify({\r\n                    uris:[uri]\r\n                }),\r\n            });\r\n            }\r\n            if(type === \"album\" || type === \"artist\" || type === \"playlist\"){\r\n                fetch(\"https://api.spotify.com/v1/me/player/play\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    authorization: `Bearer ${_token}`,\r\n                },\r\n                query:{\r\n                    \"device_id\":deviceid\r\n                },\r\n                body: JSON.stringify({\r\n                    context_uri:uri\r\n                }),\r\n            });\r\n            }\r\n        } else if (account_type === 'free') {\r\n            window.open(url, '_blank noreferrer noopener')\r\n        }        \r\n    }\r\n\r\n    makePost = () => {\r\n        let { create_url } = this.props;\r\n        window.location.href = create_url;\r\n    }\r\n\r\n    render() {\r\n        let { title, artist, album, art_url, type, account_type, player_connected } = this.props;\r\n\r\n        const listen_button = (account_type === 'premium' && !player_connected) ? \r\n            <Popup\r\n            trigger={<Button fluid basic color='green'>Listen!</Button>}\r\n            content={'Please launch Web Player first!'}\r\n            on='click'\r\n            open={this.state.isOpen}\r\n            onClose={this.handleClose}\r\n            onOpen={this.handleOpen}\r\n            position='bottom center'\r\n            /> :\r\n            <Button fluid positive onClick={() => this.playSong()}>Listen!</Button>\r\n\r\n        return (\r\n            <Card centered raised>\r\n                <Card.Content>\r\n                    {type === 'track' ? <Popup content='Create a post' position='top center' trigger={<Button floated='right' icon='plus' onClick={this.makePost}/>}/> : null}\r\n                    <Card.Header>{title}</Card.Header>\r\n                    <Card.Meta>{album + ' - ' + artist}</Card.Meta>\r\n                    <Image src={art_url}/>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    {listen_button}\r\n                </Card.Content>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SongCard;","import React, { Component } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport SongCard from './songCard'\r\n\r\nclass SongGrid extends Component {\r\n\r\n    render() {\r\n        const { song_info } = this.props\r\n\r\n        if (!Array.isArray(song_info)) {\r\n            return null;\r\n        }\r\n        else {            \r\n            const song_cards = song_info.map((info, index) => <Grid.Column stretched key={index}><SongCard title={info.title} artist={info.artist} album={info.album} art_url={info.art_url}\r\n                 url={info.url} create_url={info.create_url} _token={info._token} uri={info.uri} deviceid={info.deviceid} type={info.type} account_type={info.account_type} player_connected={info.player_connected} /></Grid.Column>)\r\n            const rows = Array(Math.ceil(song_info.length / 5)).fill().map((currValue, index) => <Grid.Row key={index}>{song_cards.slice(index*5, index*5 + 5)}</Grid.Row>)\r\n            return (\r\n                <Grid columns='equal'>\r\n                    {rows}\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class SongInfo {\r\n    title;\r\n    artist;\r\n    album;\r\n    art_url;\r\n    url;\r\n    create_url;\r\n    _token;\r\n    uri;\r\n    deviceid;\r\n    type;\r\n    account_type;\r\n    player_connected;\r\n\r\n    constructor(title, artist, album, art_url, url, create_url, _token, uri, deviceid, type, account_type, player_connected) {\r\n        this.title = title\r\n        this.artist = artist\r\n        this.album = album\r\n        this.art_url = art_url\r\n        this.url = url\r\n        this.create_url = create_url\r\n        this._token = _token\r\n        this.uri = uri\r\n        this.deviceid = deviceid\r\n        this.type = type\r\n        this.account_type = account_type\r\n        this.player_connected = player_connected\r\n    }\r\n}\r\n\r\nexport default SongGrid;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase","import firebase from '../../config/fbConfig'\r\n\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState) => {\r\n\r\n    // Make async call to database\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n        dispatch({type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n        dispatch({type: 'LOGIN_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n\r\n    const firestore = getFirestore()\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      firestore.collection('users').doc(resp.user.uid).set({\r\n        name: newUser.name,\r\n        friends: [],\r\n        friends_pending: [],\r\n        privacy: 'public',\r\n        spotify_token: '',\r\n        imageUrl: 'https://firebasestorage.googleapis.com/v0/b/runtime-terror-1d144.appspot.com/o/profile_images%2Fdefault_pic.png?alt=media&token=74c12ae4-d4ca-4ad2-af25-c38c2206ee43'\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState) => {\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateImage = (uId, imageUrl) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    firestore.collection('users').doc(uId).update({\r\n      imageUrl: imageUrl\r\n    }).then(() => {\r\n      dispatch({ type: 'USER_IMAGE', uId, imageUrl })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'USER_IMAGE_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateProfile = (uId, newInfo) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n    const {name, privacy} = newInfo\r\n\r\n    firestore.collection('users').doc(uId).update({\r\n      name: name,\r\n      privacy: privacy\r\n    }).then(() => {\r\n      dispatch({ type: 'USER_UPDATE', uId, newInfo })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'USER_UPDATE_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const addFriend = (profile_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    firestore.collection('users').doc(profile_user_id).update({\r\n      friends_pending: firestore.FieldValue.arrayUnion(logged_in_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'SEND_FRIEND_REQUEST', profile_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SEND_FRIEND_REQUEST_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const removeFriend = (profile_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    // Remove logged in user from profile user's friends list\r\n    firestore.collection('users').doc(profile_user_id).update({\r\n      friends: firestore.FieldValue.arrayRemove(logged_in_user_id)\r\n    })\r\n    \r\n    // Remove profile user from logged in user's friends list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends: firestore.FieldValue.arrayRemove(profile_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'REMOVE_FRIEND', profile_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'REMOVE_FRIEND_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const acceptFriend = (friend_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    // Remove incoming friend from logged in user's friends_pending list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends_pending: firestore.FieldValue.arrayRemove(friend_user_id)\r\n    })\r\n    \r\n    // Add incoming friend to logged in user's friends list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends: firestore.FieldValue.arrayUnion(friend_user_id)\r\n    })\r\n\r\n    // Add logged in user to incoming friend's friends list\r\n    firestore.collection('users').doc(friend_user_id).update({\r\n      friends: firestore.FieldValue.arrayUnion(logged_in_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'ACCEPT_FRIEND', friend_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'ACCEPT_FRIEND_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const rejectFriend = (friend_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    // Remove incoming friend from logged in user's friends_pending list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends_pending: firestore.FieldValue.arrayRemove(friend_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'REJECT_FRIEND', friend_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'REJECT_FRIEND_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateToken = (uId, token, callback) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    firestore.collection('users').doc(uId).update({\r\n      spotify_token: token\r\n    }).then(() => {\r\n      dispatch({ type: 'SPOTIFY_TOKEN', uId })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SPOTIFY_TOKEN_ERROR', err })\r\n    })\r\n\r\n    callback();\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Loader, Header, Icon, Divider } from 'semantic-ui-react'\r\nimport { updateToken } from '../../store/actions/authActions'\r\n\r\n\r\nexport class TokenHandler extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const error = urlParams.get('error')\r\n    this.state = {\r\n      token: token ? token : '',\r\n      error: error ? error : ''\r\n    }\r\n  }\r\n\r\n  getHashParams() {\r\n    let hashParams = {};\r\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.error)\r\n      this.handleToken()\r\n  }\r\n\r\n  handleToken() {\r\n    if (this.props.auth && !this.props.auth.isEmpty && this.state.token !== '') {\r\n      this.props.updateToken(this.props.auth.uid, this.state.token, () => \r\n        this.props.history.push(\"/discover\")\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='fullsize_div'>\r\n        { this.state.error ? \r\n          <Header as='h2' icon textAlign='center'>\r\n            <Divider hidden />\r\n            <Divider hidden />\r\n            <Divider hidden />\r\n            <Icon name='exclamation triangle' />\r\n            An access error occured\r\n          </Header>\r\n          :\r\n          <Loader active size='massive'>Redirecting...</Loader>\r\n        }\r\n         \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateToken: (uId, token, callback) => dispatch(updateToken(uId, token, callback))\r\n  }\r\n}\r\n\r\n\r\nexport function redirectUrlToSpotifyForLogin() {\r\n\tconst CLIENT_ID = process.env.REACT_APP_SPOTIFY_CLIENT_ID\r\n  const REDIRECT_URI = \r\n    process.env.NODE_ENV === \"production\"\r\n    ? 'https://princes25.github.io/Mutter/tokenHandler'\r\n    : 'http://localhost:3000/tokenHandler';\r\n\r\n\tconst scopes = [\r\n    'user-read-private',\r\n    'user-read-email',\r\n    'user-read-playback-state',\r\n    'app-remote-control',\r\n    'user-read-recently-played',\r\n    'user-top-read',\r\n    'user-modify-playback-state',\r\n    'user-read-currently-playing',\r\n    'streaming'\r\n  ];\r\n  \r\n\treturn (\r\n\t\t\"https://accounts.spotify.com/authorize?client_id=\" +\r\n\t\tCLIENT_ID +\r\n\t\t\"&redirect_uri=\" +\r\n\t\tencodeURIComponent(REDIRECT_URI) +\r\n\t\t\"&scope=\" +\r\n\t\tencodeURIComponent(scopes.join(\" \")) +\r\n    \"&response_type=token\"\r\n\t);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenHandler)\r\n","// Based on solution found here: https://github.com/facebook/react/issues/5465#issuecomment-157888325\r\n\r\nexport const makeCancellable = (promise) => {\r\n    let isCancelled = false\r\n\r\n    const wrappedPromise = new Promise((resolve, reject) => {\r\n        promise.then( (val) => {\r\n            isCancelled ? reject({isCancelled: true}) : resolve(val)\r\n        });\r\n\r\n        promise.catch( (error) => {\r\n            isCancelled ? reject({isCancelled: true}) : reject(error)\r\n        })\r\n    })\r\n    \r\n    return {\r\n        promise: wrappedPromise,\r\n        cancel() {\r\n            isCancelled = true\r\n        },\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Grid, Search, Header, Divider, Button, Menu, Image, Popup, Card } from 'semantic-ui-react'\r\nimport SongGrid, { SongInfo } from './songGrid'\r\nimport { redirectUrlToSpotifyForLogin } from './tokenHandler.js'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { makeCancellable } from './cancellablePromise';\r\nimport _ from 'lodash'\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\nconst spotifyUrl = redirectUrlToSpotifyForLogin()\r\nconst base_url = \r\n  process.env.NODE_ENV === \"production\"\r\n  ? 'https://princes25.github.io/Mutter'\r\n  : 'http://localhost:3000';\r\n\r\n  \r\nexport class Discover extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      loggedIn: false,\r\n      searchButton: 'songs',\r\n      searchedTracks: [],\r\n      searchedArtists: [],\r\n      searchedAlbums: [],\r\n      searchedPlaylists: [],\r\n      value: '',\r\n      results: [],\r\n      newReleases: [],\r\n      recentlyPlayed: [],\r\n      topTracks: [],\r\n      _token: '',\r\n      deviceId: \"\",\r\n      error: \"\",\r\n      trackName: undefined,\r\n      trackUrl: undefined,\r\n      artistName: undefined,\r\n      albumName: undefined,\r\n      playing: false,\r\n      position: 0,\r\n      duration: 1,\r\n      albumArt: \"\",\r\n      player_connected: false,\r\n      account_type: 'Not Logged In. Click to authenticate!',\r\n      accountTypePromise: null,\r\n      newReleasesPromise: null,\r\n      recentSongsPromise: null,\r\n      topTracksPromise: null,\r\n      searchTracksPromise: null,\r\n      searchArtistsPromise: null,\r\n      searchAlbumsPromise: null,\r\n      searchPlaylistsPromise: null,\r\n      initializeOnceMounted: undefined\r\n    }\r\n  }\r\n  \r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.profile.isLoaded && nextProps.profile.spotify_token && prevState._token !== nextProps.profile.spotify_token) {\r\n      return { _token: nextProps.profile.spotify_token, loggedIn: true }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  onRouteChange(route) {\r\n    if(this.state.player_connected){\r\n      this.player.disconnect();\r\n    }\r\n  }\r\n  \r\n  initialize() {\r\n    if (this.state.loggedIn) {\r\n      clearInterval(this.initializeOnceMounted)\r\n      const token = this.state._token;\r\n      const getToken = spotifyApi.getAccessToken();\r\n      if (token) {\r\n        spotifyApi.setAccessToken(token);\r\n      }\r\n      else if(getToken){\r\n        spotifyApi.setAccessToken(getToken);\r\n      }\r\n      this.getAccountType();\r\n      this.getNewReleases()\r\n      this.getRecentSongs();\r\n      this.getTopTracks();\r\n      this.playerCheckInterval = null;\r\n      this.props.history.listen(this.onRouteChange.bind(this));\r\n    } \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeOnceMounted = setInterval(() => this.initialize(), 20)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {accountTypePromise, newReleasesPromise, recentSongsPromise, topTracksPromise, searchTracksPromise, searchArtistsPromise, searchAlbumsPromise, searchPlaylistsPromise} = this.state\r\n    const promises = [accountTypePromise, newReleasesPromise, recentSongsPromise, topTracksPromise, searchTracksPromise, searchArtistsPromise, searchAlbumsPromise, searchPlaylistsPromise]\r\n    for (let i = 0; i < promises.length; i++) {\r\n      if (promises[i]) {\r\n        promises[i].cancel()\r\n      }\r\n    }\r\n    if (this.initializeOnceMounted !== undefined)\r\n      clearInterval(this.initializeOnceMounted)\r\n  }\r\n\r\n  getAccountType(){\r\n    let accountType = makeCancellable(spotifyApi.getMe())\r\n    \r\n    this.setState({accountTypePromise: accountType}, () => {\r\n      accountType.promise.then((data) => {\r\n        const product = data.product === 'premium' ? 'premium' : 'free' // Since it may return 'open', which is also free\r\n        this.setState({account_type: product});\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n        if (err.status === 401)\r\n          if (window.confirm(\"Token Expired! Please re-login to Spotify!\")) \r\n            window.location.href = spotifyUrl;\r\n      })\r\n    })\r\n  }\r\n\r\n  getNewReleases(){\r\n    let newReleases = makeCancellable(spotifyApi.getNewReleases({ limit : 5, offset: 0, country: 'US' }))\r\n    this.setState({newReleasesPromise: newReleases}, () => {\r\n      newReleases.promise.then((data) => {\r\n        this.setState({newReleases: data.albums.items});\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      })\r\n    })\r\n  }\r\n  \r\n  getRecentSongs(){\r\n    let recentSongs = makeCancellable(spotifyApi.getMyRecentlyPlayedTracks({ limit: 5 }))\r\n    this.setState({recentSongsPromise: recentSongs}, () => {\r\n      recentSongs.promise.then((data) => {\r\n        this.setState({\r\n          recentlyPlayed: data.items\r\n        });\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      })\r\n    })\r\n  }\r\n\r\n  getTopTracks(){\r\n    let topTracks = makeCancellable(spotifyApi.getMyTopTracks({ limit: 5 }))\r\n    this.setState({topTracksPromise: topTracks}, () => {\r\n      topTracks.promise.then((data) => {\r\n        this.setState({\r\n          topTracks: data.items\r\n        });\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      })\r\n    })\r\n  }\r\n\r\n  searchTracks(keyword){\r\n    let tracks = makeCancellable(spotifyApi.searchTracks(keyword))\r\n    this.setState({searchTracksPromise: tracks})\r\n\r\n    tracks.promise.then((data) => {\r\n      this.setState({searchedTracks: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  searchAlbums(keyword){\r\n    let albums = makeCancellable(spotifyApi.searchAlbums(keyword))\r\n    this.setState({searchAlbumsPromise: albums})\r\n\r\n    albums.promise.then((data) => {\r\n      this.setState({searchedAlbums: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  searchArtists(keyword){\r\n    let artists = makeCancellable(spotifyApi.searchArtists(keyword))\r\n    this.setState({searchArtistsPromise: artists})\r\n\r\n    artists.promise.then((data) => {\r\n      this.setState({searchedArtists: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  searchPlaylists(keyword){\r\n    let playlists = makeCancellable(spotifyApi.searchPlaylists(keyword))\r\n    this.setState({searchPlaylistsPromise: playlists})\r\n    \r\n    playlists.promise.then((data) => {\r\n      this.setState({searchedPlaylists: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState({value: '', results: []})\r\n\r\n      switch(this.state.searchButton) {\r\n        case 'songs':\r\n          this.searchTracks(value)\r\n          this.setState({\r\n            results: (this.state.searchedTracks !== [] && this.state.searchedTracks.tracks && this.state.searchedTracks.tracks.items) ? this.state.searchedTracks.tracks.items : []\r\n          })\r\n          break;\r\n\r\n        case 'artists':\r\n          this.searchArtists(value)\r\n          this.setState({\r\n            results: (this.state.searchedArtists !== [] && this.state.searchedArtists.artists && this.state.searchedArtists.artists.items) ? this.state.searchedArtists.artists.items : []\r\n          })\r\n          break;\r\n          \r\n        case 'albums':\r\n          this.searchAlbums(value)\r\n          this.setState({\r\n            results: (this.state.searchedAlbums !== [] && this.state.searchedAlbums.albums && this.state.searchedAlbums.albums.items) ? this.state.searchedAlbums.albums.items : []\r\n          })\r\n          break;\r\n\r\n        case 'playlists':\r\n          this.searchPlaylists(value)\r\n          this.setState({\r\n            results: (this.state.searchedPlaylists !== [] && this.state.searchedPlaylists.playlists && this.state.searchedPlaylists.playlists.items) ? this.state.searchedPlaylists.playlists.items : []\r\n          })\r\n          break;\r\n\r\n        default:\r\n          this.setState({\r\n            results: []\r\n          }) \r\n          break;\r\n      }\r\n    }, 20)\r\n\r\n  }\r\n\r\n  checkForPlayer() {\r\n    const { _token } = this.state;\r\n  \r\n    if (window.Spotify !== null) {\r\n      \r\n      clearInterval(this.playerCheckInterval);\r\n\r\n      this.player = new window.Spotify.Player({\r\n        name: \"Runtime Terror's Spotify Player\",\r\n        getOAuthToken: cb => { cb(_token); },\r\n      });\r\n      this.createEventHandlers();\r\n  \r\n      this.player.connect();\r\n      const player_connected = true;\r\n      this.setState({player_connected});\r\n    }\r\n  }\r\n\r\n  checkForPlayer_driver(){\r\n    this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 10);\r\n  }\r\n\r\n  createEventHandlers() {\r\n    this.player.on('initialization_error', e => { console.error(e); });\r\n    this.player.on('authentication_error', e => {\r\n      console.error(e);\r\n      this.setState({ loggedIn: false });\r\n    });\r\n    this.player.on('account_error', e => { console.error(e); });\r\n    this.player.on('playback_error', e => { console.error(e); });\r\n  \r\n    // Playback status updates  \r\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\r\n    // Ready\r\n    this.player.on('ready', async data => {\r\n      let { device_id } = data;\r\n      console.log(\"Let the music play on!\");\r\n      this.setState({ deviceId: device_id });\r\n      this.transferPlaybackHere();\r\n    });\r\n  }\r\n\r\n  onStateChanged(state) {\r\n    // if we're no longer listening to music, we'll get a null state.\r\n    if (state !== null) {\r\n      const {\r\n        current_track: currentTrack,\r\n        position,\r\n        duration,\r\n      } = state.track_window;\r\n\r\n      const trackName = currentTrack.name\r\n      const trackUrl = \"https://open.spotify.com/track/\" + currentTrack.id\r\n      const albumName = currentTrack.album.name\r\n      const artistName = currentTrack.artists\r\n        .map(artist => artist.name)\r\n        .join(\", \");\r\n      const playing = !state.paused;\r\n      const albumArt = currentTrack.album.images[0].url;\r\n      this.setState({\r\n        position,\r\n        duration,\r\n        trackName,\r\n        trackUrl: trackUrl,\r\n        albumName,\r\n        artistName,\r\n        playing,\r\n        albumArt,\r\n      })\r\n    }\r\n  }\r\n\r\n  onPrevClick = () => {\r\n    if(this.state.player_connected){\r\n      this.player.previousTrack();\r\n    }\r\n  }\r\n  \r\n  onPlayClick = () => {\r\n    if(this.state.player_connected){\r\n      this.player.togglePlay();\r\n    }\r\n  }\r\n  \r\n  onNextClick = () => {\r\n    if(this.state.player_connected){\r\n      this.player.nextTrack();\r\n    }\r\n  }\r\n  \r\n  transferPlaybackHere() {\r\n    const { deviceId, _token } = this.state;\r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: `Bearer ${_token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"device_ids\": [ deviceId ],\r\n        \"play\": false,\r\n      }),\r\n    });\r\n  }\r\n\r\n  createPost = () => { \r\n    if (this.state.trackUrl === undefined) {\r\n      window.location.href = base_url + \"/createpost/#SongName=\" + this.state.trackName\r\n    }\r\n    else {\r\n      window.location.href = base_url + \"/createpost/#SongName=\" + this.state.trackName + \"&SongUrl=\" + this.state.trackUrl\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, results, recentlyPlayed, topTracks, newReleases, trackName, artistName, albumName, albumArt, playing, _token, deviceId, account_type, player_connected } = this.state\r\n\r\n    let searchResults = []\r\n    let newAlbums = []\r\n    const recents = []\r\n    const top = []\r\n    let i;\r\n\r\n    if (results !== 'undefined') {\r\n      for (i = 0; i < Math.min(results.length, 5); i++) {\r\n        let title = results[i].name\r\n        let artist = results[i].type === 'track' ? results[i].artists[0].name : results[i].type === 'playlist' ? results[i].owner.display_name : results[i].type === 'album' ? results[i].artists[0].name : ''\r\n        let album = results[i].type === 'track' ? results[i].album.name : ''\r\n        let art_url = results[i].type === 'artist' || results[i].type === 'playlist' || results[i].type === 'album' ? (results[i].images.length > 0 ? results[i].images[0].url : '') : results[i].album.images[0].url\r\n        let url = results[i].external_urls.spotify\r\n        let access_token = _token\r\n        let uri = results[i].uri\r\n        let deviceid = deviceId\r\n        let type = results[i].type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        searchResults.push(new SongInfo(title, artist, album, art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    } \r\n\r\n    if (recentlyPlayed !== 'undefined') {\r\n      for (i = 0; i < Math.min(recentlyPlayed.length, 5); i++) {\r\n        let title = recentlyPlayed[i].track.name\r\n        let artist = recentlyPlayed[i].track.artists[0].name\r\n        let album = recentlyPlayed[i].track.album.name\r\n        let art_url = recentlyPlayed[i].track.album.images[0].url\r\n        let url = recentlyPlayed[i].track.external_urls.spotify\r\n        let access_token = _token\r\n        let uri = recentlyPlayed[i].track.uri\r\n        let deviceid = deviceId\r\n        let type = recentlyPlayed[i].track.type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        recents.push(new SongInfo(title, artist, album, art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    }\r\n\r\n    if (topTracks !== 'undefined') {\r\n    for (i = 0; i < Math.min(topTracks.length, 5); i++) {\r\n        let title = topTracks[i].name\r\n        let artist = topTracks[i].artists[0].name\r\n        let album = topTracks[i].album.name\r\n        let art_url = topTracks[i].album.images[0].url\r\n        let url = topTracks[i].external_urls.spotify\r\n        let access_token = _token\r\n        let uri = topTracks[i].uri\r\n        let deviceid = deviceId\r\n        let type = topTracks[i].type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        top.push(new SongInfo(title, artist, album, art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    }\r\n\r\n    if (newReleases !== 'undefined') {\r\n      for (i = 0; i < Math.min(newReleases.length, 5); i++) {\r\n        let title = newReleases[i].name\r\n        let artist = newReleases[i].artists[0].name\r\n        let art_url = newReleases[i].images[0].url\r\n        let url = newReleases[i].external_urls.spotify\r\n        let access_token = _token\r\n        let uri = newReleases[i].uri\r\n        let deviceid = deviceId\r\n        let type = newReleases[i].type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        newAlbums.push(new SongInfo(title, artist, \"\", art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    }\r\n\r\n    let player =\r\n      <Menu.Item>\r\n        <Grid>\r\n          <Button key={0} inverted icon='backward' onClick={this.onPrevClick}></Button>\r\n          <Button key={1} inverted icon={(playing) ? 'pause' : 'play'} onClick={this.onPlayClick}></Button>\r\n          <Button key={2} inverted icon='forward' onClick={this.onNextClick}></Button>\r\n          <Popup key={3} trigger={<Menu.Item>{trackName}</Menu.Item>} position='bottom center'>\r\n          <Popup.Content>\r\n            <Card centered raised>\r\n            <Card.Content>\r\n                <Card.Header>{trackName}</Card.Header>\r\n                <Card.Meta>{albumName + ' - ' + artistName}</Card.Meta>\r\n                <Image src={albumArt}/>\r\n            </Card.Content>\r\n            </Card>\r\n          </Popup.Content>\r\n          </Popup>\r\n          <Popup key={4} trigger={<Button inverted icon='plus' onClick={this.createPost}/>} position='bottom center'>\r\n            <Popup.Content>\r\n              Create post\r\n            </Popup.Content>\r\n          </Popup>\r\n        </Grid>\r\n      </Menu.Item>\r\n    return (\r\n      <div className='Discover'>\r\n        { // Top bar for player\r\n          <Menu inverted>\r\n            { this.state.account_type === 'premium' ? // Show Player only if User is Premium on Spotify\r\n            (this.state.loggedIn && !(this.state.player_connected && trackName !== undefined)) ? // Show \"button\" when logged in and either we have not started the web player, or the webplayer hasn't loaded yet (checked based on song name)\r\n              <Menu.Item onClick={() => this.checkForPlayer_driver()}>\r\n                Launch Web Player\r\n              </Menu.Item>\r\n              :\r\n              player : null\r\n          }\r\n\r\n\r\n            <Menu.Item position='right' onClick={()=>console.log()}>\r\n              <Grid centered>\r\n                <Search fluid\r\n                  showNoResults={false}\r\n                  size='large'\r\n                  onSearchChange={_.debounce(this.handleSearchChange, 20)}\r\n                  value={value}\r\n                  placeholder={'Search for ' + this.state.searchButton + '...'}\r\n                  />\r\n                <Button.Group labeled>\r\n                  <Button positive={this.state.searchButton === 'songs'} secondary content='Song' onClick={() => this.setState({value: '', results: [], searchButton: 'songs'})} />\r\n                  <Button positive={this.state.searchButton === 'artists'} secondary content='Artist' onClick={() => this.setState({value: '', results: [], searchButton: 'artists'})} />\r\n                  <Button positive={this.state.searchButton === 'albums'} secondary content='Album' onClick={() => this.setState({value: '', results: [], searchButton: 'albums'})} />\r\n                  <Button positive={this.state.searchButton === 'playlists'} secondary content='Playlist' onClick={() => this.setState({value: '', results: [], searchButton: 'playlists'})} />\r\n                </Button.Group>\r\n              </Grid>\r\n            </Menu.Item>\r\n\r\n            { this.state.loggedIn ?\r\n              <Menu.Item href={spotifyUrl}>\r\n                Spotify Status: <p style={{color: (this.state.account_type === 'premium') ? 'gold' : 'green', whiteSpace: 'pre'}}> {this.state.account_type.charAt(0).toUpperCase() + this.state.account_type.slice(1)} </p>\r\n              </Menu.Item> :\r\n              <Menu.Item href={spotifyUrl}>\r\n                Sign In To Spotify  \r\n              </Menu.Item>\r\n            }\r\n          </Menu>\r\n        }\r\n\r\n        {!this.state.loggedIn && this.state._token === '' ? <p align='center' style={{color: '#139bd1', fontSize: '26px'}}>Welcome! <br /> Please log into Spotify to get started.</p> : null}\r\n\r\n        {(searchResults.length !== 0) ? \r\n          <SongSection\r\n          title='Search Results'\r\n          song_info={searchResults}\r\n          expand={this.expandSection}\r\n        /> : null\r\n        }\r\n\r\n        {(recents.length !== 0) ?\r\n        <SongSection\r\n          title='Recent Songs'\r\n          song_info={recents}\r\n        /> : null\r\n        }\r\n\r\n        {(top.length !== 0) ?\r\n        <SongSection\r\n          title='Your Top Picks'\r\n          song_info={top}\r\n        /> : null\r\n        }\r\n        \r\n        {(newAlbums.length !== 0) ?\r\n        <SongSection\r\n          title='New Releases'\r\n          song_info={newAlbums}\r\n        /> : null\r\n        }\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass SongSection extends Component {\r\n  render() {\r\n    const {title, song_info} = this.props\r\n\r\n    return (\r\n      <div>\r\n        <br/>\r\n          <Container fluid>\r\n            <Header as='h2' textAlign='center'>{title}</Header>\r\n            <Divider/>\r\n            <SongGrid song_info={song_info}/>\r\n            <Divider hidden/>\r\n            <Divider hidden/>\r\n          </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Discover)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, ButtonContent, Icon } from 'semantic-ui-react'\r\nimport { signUp } from '../../../store/actions/authActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        name: ''\r\n    }\r\n\r\n    submit = () => {\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authError } = this.props\r\n        return (\r\n            <Form onSubmit={this.submit}>\r\n                <Form.Field>\r\n                    <Form.Input label='Email' id='email' placeholder='Enter your email' onChange={this.change}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <Form.Input label='Password' id='password' placeholder='Enter your password' type='password' onChange={this.change}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <Form.Input label='Name' id='name' placeholder='Enter your name' onChange={this.change}/>\r\n                </Form.Field>\r\n                {authError ? <p style={{color: 'red'}}>{authError}</p> : null}\r\n                <Form.Field control={Button}>\r\n                    <ButtonContent>\r\n                        <Icon name='headphones'/>\r\n                        Sign Up\r\n                    </ButtonContent>\r\n                </Form.Field>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      authError: state.auth.authError\r\n    }\r\n  }\r\n  \r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n  \r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, ButtonContent, Icon } from 'semantic-ui-react'\r\nimport { signIn } from '../../../store/actions/authActions'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    submit = () => {\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authError } = this.props\r\n        return (\r\n            <Form onSubmit={this.submit}>\r\n                <Form.Field>\r\n                    <Form.Input label='Email' id='email' placeholder='Enter your email' onChange={this.change}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <Form.Input label='Password' id='password' placeholder='Enter your password' type='password' onChange={this.change}/>\r\n                </Form.Field>\r\n                {authError ? <p style={{color: 'red'}}>{authError}</p> : null}\r\n                <Form.Field control={Button} fluid>\r\n                    <ButtonContent>\r\n                        <Icon name='headphones'/>\r\n                        Sign In\r\n                    </ButtonContent>\r\n                </Form.Field>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Button, ButtonContent, Icon, Segment } from 'semantic-ui-react'\r\nimport SignUp from './signup'\r\nimport SignIn from './signin'\r\n\r\n\r\n// TODO: A lot of code overlap with SignUp/SignIn. Refactor into one class\r\nclass LoginForm extends Component {\r\n    state = {\r\n        signing_up: false\r\n    }\r\n\r\n    sign_up = (word) => {\r\n        this.setState( {signing_up: word})\r\n    }\r\n\r\n    render() {\r\n        const signing_area = this.state.signing_up ? <SignUp/> : <SignIn/>\r\n        return (\r\n            <div>\r\n                <Button.Group>\r\n                    <Button color='yellow' onClick={() => {this.sign_up(true)}}>\r\n                        <ButtonContent>\r\n                            <Icon name='plus'/>\r\n                            Sign Up\r\n                        </ButtonContent>\r\n                    </Button>\r\n                    <Button.Or/>\r\n                    <Button color='yellow' onClick={() => {this.sign_up(false)}}>\r\n                        <ButtonContent>\r\n                        <Icon name='music'/>\r\n                            Sign In\r\n                        </ButtonContent>\r\n                    </Button>\r\n                </Button.Group>\r\n                <Segment>\r\n                    {signing_area}\r\n                </Segment>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default LoginForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Image, Grid, GridRow } from 'semantic-ui-react'\r\nimport LoginForm from './loginForm'\r\n\r\n\r\nconst path = process.env.NODE_ENV === \"production\" ? '' : '/';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (auth.isLoaded && auth.uid) {\r\n            return <Redirect to='/'/>\r\n        }\r\n        else {\r\n            return (\r\n                <Grid padded centered>\r\n                    <Image src={path + \"img/silhouette_2.png\"}/>\r\n                    <GridRow> <LoginForm/> </GridRow>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps)(Login)\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Feed, Divider } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst PostSummary = ({post, users}) => {\r\n  const user = users && post ? users.filter(user => user.id === post.authorId)[0] : null\r\n\r\n  const summary = \r\n    <div>\r\n      <Link to={'/profile/' + post.authorId}> {post.author} </Link>\r\n      rated song <b><a href={post.url ? post.url : null}> {post.song} </a></b>\r\n      <span className={\"fa fa-star \" + (post.rating >= 1 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 2 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 3 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 4 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 5 ? 'star_checked' : '')}></span> \r\n    </div>\r\n  \r\n\r\n  return (\r\n\r\n    user && post ?\r\n    <div>\r\n      <Feed size='large'>\r\n        <Feed.Event\r\n          image={user.imageUrl}\r\n          date={moment(post.createdAt.toDate()).format('LLLL')}\r\n          summary={summary}\r\n          extraText={post.comment}\r\n        />\r\n      </Feed>\r\n      <Divider />\r\n    </div> : null\r\n  )\r\n}\r\n\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport PostSummary from './postSummary';\r\n\r\n\r\nconst PostList = ({posts, users}) => {\r\n  return (\r\n    <div>\r\n        {(posts && (posts.length === 0)) ? <h3>No Posts Yet!</h3> : null}\r\n        { posts && posts.map(post => {\r\n          return (\r\n            <PostSummary key={post.id} post={post} users={users} />\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PostList;","import React, { Component } from 'react'\r\nimport { Tab, Divider } from 'semantic-ui-react'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport PostList from './postList'\r\n\r\nexport class Feed extends Component {\r\n  state = {\r\n    friendsPosts: null,\r\n    explorePosts: null,\r\n    users: null,\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newPosts = {}\r\n    if (nextProps.explorePosts !== prevState.explorePosts) {\r\n      Object.assign(newPosts, {explorePosts: nextProps.explorePosts})\r\n    }\r\n    if (nextProps.friendsPosts !== undefined && nextProps.friendsPosts !== prevState.friendsPosts) {\r\n      Object.assign(newPosts, {friendsPosts: nextProps.friendsPosts})\r\n    }\r\n    if (nextProps.users !== undefined && nextProps.users !== prevState.users) {\r\n      Object.assign(newPosts, {users: nextProps.users})\r\n    }\r\n    return (newPosts.length !== 0) ? newPosts : null;\r\n  }\r\n\r\n  render() {\r\n    let feedPanes = [\r\n      { menuItem: 'Friends', render: () => <Tab.Pane><PostList posts={this.state.friendsPosts} users={this.state.users}/></Tab.Pane> },\r\n      { menuItem: 'Explore', render: () => <Tab.Pane><PostList posts={this.state.explorePosts} users={this.state.users}/></Tab.Pane> },\r\n    ]\r\n  \r\n    return (\r\n      <div>\r\n        <Divider hidden />\r\n        <Tab panes={feedPanes}/> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //creates the friends list for us to query\r\n  var currentFriendsList = [\"0\"]; //This is the dummy value\r\n  for(var key in state.firestore.ordered.users)\r\n  {\r\n    if(state.firebase.auth[\"uid\"] === state.firestore.ordered.users[key][\"id\"])\r\n    {\r\n      currentFriendsList = state.firestore.ordered.users[key][\"friends\"];\r\n    }\r\n  }\r\n\r\n  //sort friendsPosts, because the sortBy doesn't work\r\n  if(state.firestore.ordered.friendsPosts != null){\r\n  var sortedFriendsArray = state.firestore.ordered.friendsPosts.sort(function (a, b) {\r\n    return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];\r\n  })\r\n  }\r\n\r\n  //This is if we wanted to allow personal private posts to be shown on explore page\r\n  //find a way to combine publicPosts and privatePersonalPosts for the explore page \r\n  // if(state.firestore.ordered.publicPosts != null && state.firestore.ordered.privatePersonalPosts != null){\r\n  // var sortedExploreArray = state.firestore.ordered.publicPosts.concat(state.firestore.ordered.privatePersonalPosts)\r\n  //                                                   .sort(function (a, b) {\r\n  //   return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];\r\n  // })\r\n  // }\r\n  if(state.firestore.ordered.publicPosts)\r\n    var sortedExploreArray = state.firestore.ordered.publicPosts.sort(function (a, b) {return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];})\r\n\r\n  return {\r\n    explorePosts: sortedExploreArray,\r\n    friendsPosts: sortedFriendsArray,\r\n    auth: state.firebase.auth,\r\n    users: state.firestore.ordered.users,\r\n    currentFriendsList: currentFriendsList\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => [\r\n      { collection: 'users' },\r\n      {\r\n        collection: 'posts',\r\n        storeAs: 'friendsPosts',\r\n        where: ['authorId', 'in', props.currentFriendsList === null || props.currentFriendsList.length === 0 ? ['0'] : props.currentFriendsList]\r\n      },\r\n      { \r\n        collection: 'posts',\r\n        storeAs: 'publicPosts',\r\n        where: ['privacy', '==', 'public'],\r\n      },\r\n      // {\r\n      //   collection: 'posts',\r\n      //   storeAs: 'privatePersonalPosts',\r\n      //   where: [\r\n      //     ['authorId', '==', props.auth[\"uid\"]\r\n      //   ],\r\n      //     ['privacy', '==', 'private']\r\n      //   ]\r\n      // },\r\n  ])\r\n)(Feed);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../store/actions/postActions'\r\nimport { Form, Radio, Header, Container, Divider } from 'semantic-ui-react'\r\n\r\n// Semantic-UI\r\n// https://react.semantic-ui.com/\r\n// https://medium.com/@a.carreras.c/using-semantic-ui-react-your-react-js-app-523ddc9abeb3\r\n\r\n\r\nexport class CreatePost extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    const params = this.getHashParams();\r\n    const songName = params.SongName;\r\n    const songUrl = params.SongUrl;\r\n    \r\n    this.state = {\r\n      song: songName ? songName : '',\r\n      comment: '',\r\n      rating: '',\r\n      url: songUrl ? songUrl : '',\r\n      privacy: props.profile.privacy,\r\n      error: false,\r\n    }\r\n  }\r\n  \r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.profile && nextProps.profile.isLoaded && nextProps.profile.privacy !== undefined && prevState.privacy === undefined) {\r\n      return {\r\n        privacy: nextProps.profile.privacy\r\n      }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleRating = (e, {value}) => {\r\n    this.setState({\r\n      'rating': value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (this.state.rating) {\r\n      this.props.createPost({\r\n        song: this.state.song,\r\n        comment: this.state.comment,\r\n        rating: this.state.rating,\r\n        privacy: this.state.privacy,\r\n        url: this.state.url\r\n      })\r\n      this.props.history.push('/')\r\n    }\r\n    else {\r\n        this.setState({ error: 'Rating is required!' })\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      privacy: (this.state.privacy === 'private') ? 'public' : 'private',\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Container text>\r\n        <Divider hidden />\r\n        <Header as='h2'>Create Post</Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group widths='equal'>\r\n            <Form.Input\r\n              id='song'\r\n              label='Song'\r\n              name='Song'\r\n              required={this.state.song ? false : true}\r\n              readOnly={this.state.url ? true : false}\r\n              placeholder={this.state.song}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Form.Input\r\n              id='url'\r\n              label='URL'\r\n              name='URL'\r\n              readOnly\r\n              disabled={this.state.url ? false : true}\r\n              placeholder={this.state.url}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n              control={Radio}\r\n              toggle\r\n              label={this.state.privacy === 'private' ? 'This post will be Private' : 'This post will be Public'}\r\n              defaultChecked={this.state.privacy === 'private'}\r\n              onClick={this.toggle}\r\n            />\r\n          <Form.Dropdown\r\n            id='rating'\r\n            label='Rating'\r\n            placeholder='Select'\r\n            required\r\n            inline\r\n            error={this.state.error}\r\n            onChange={this.handleRating}\r\n            options={\r\n              [\r\n                {text: '1', value: 1},\r\n                {text: '2', value: 2},\r\n                {text: '3', value: 3},\r\n                {text: '4', value: 4},\r\n                {text: '5', value: 5}\r\n              ]\r\n            }\r\n          />\r\n\r\n          <Form.TextArea\r\n            id='comment'\r\n            label='Comment'\r\n            name='Comment'\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Button type='submit' color='green'>Create Post</Form.Button>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n \r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      profile: state.firebase.profile\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPost: (Post) => dispatch(createPost(Post))\r\n  }\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(CreatePost);\r\n","export const createPost = (post) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n\r\n    firestore.collection('posts').add({\r\n      ...post, \r\n      author: profile.name,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_POST', post: post })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_POST_ERROR', err: err })\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Feed, Divider } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst FriendList = ({friends, users}) => {\r\n  return (\r\n    <div>\r\n        {(friends && friends.length === 0) ? <h3>No Friends Yet :(</h3> : null }\r\n        { friends && users && friends.map(friend => {\r\n          const friend_info = users.filter(user => user.id === friend)[0]\r\n          const summary = friend_info ? <Link to={'/profile/' + friend}> {friend_info.name} </Link> : null\r\n          return (\r\n            <Feed key={friend}>\r\n              <Feed.Event\r\n                image={friend_info ? friend_info.imageUrl : null}\r\n                summary={summary}\r\n              />\r\n              <Divider fitted/>\r\n            </Feed>\r\n          )\r\n        })}\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default FriendList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport firebase from 'firebase';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport { updateImage } from '../../store/actions/authActions'\r\nimport { Grid, Progress, Header, Image, Button, Modal } from 'semantic-ui-react';\r\n\r\n\r\nclass ModalUploadPicture extends Component {\r\n\r\n  constructor(uId) {\r\n    super()\r\n    this.uId = uId.uId\r\n  }\r\n\r\n  state = {\r\n    image: '',\r\n    isUploading: false,\r\n    progress: 0,\r\n    imageURL: '',\r\n    open: false\r\n  };\r\n\r\n  handleUploadStart = () => {\r\n    this.setState({isUploading: true, progress: 0, imageURL: null, image: null})\r\n  }\r\n  handleProgress = (progress) => this.setState({progress});\r\n  \r\n  handleUploadError = (error) => {\r\n    this.setState({isUploading: false})\r\n    console.error(error);\r\n  }\r\n \r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({image: filename, progress: 100, isUploading: false});\r\n    firebase.storage().ref('profile_images').child(filename).getDownloadURL().then(url => {\r\n        this.setState({imageURL: url})\r\n        this.props.updateImage(this.uId, url)\r\n        this.handleModalClose()\r\n    });\r\n  }\r\n\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      image: '',\r\n      isUploading: false,\r\n      progress: 0,\r\n      imageURL: '',\r\n      open: false\r\n    })\r\n  }\r\n    \r\n  render() {\r\n    const previousImageUrl = this.props.previousImageUrl\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Image src={previousImageUrl} size='medium' circular bordered/>}\r\n        open={this.state.open}\r\n        onOpen={() => this.setState({open: true})}\r\n        closeOnDimmerClick={false}\r\n        closeOnDocumentClick={false}\r\n        size='small'\r\n      >\r\n        <Modal.Content>                \r\n          <Grid divided stretched centered>\r\n            <Grid.Row stretched>\r\n              <Grid.Column stretched>\r\n                <Header as='h2'>Current</Header>\r\n                <Image src={previousImageUrl} wrapped size='medium' href={previousImageUrl} bordered/>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row stretched>\r\n              <Grid.Column stretched>\r\n              <Grid stretched columns={16}>\r\n                <Grid.Row>\r\n                <Grid.Column width={6}>\r\n                  <FileUploader\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    filename={ this.uId }\r\n                    storageRef={firebase.storage().ref('profile_images')}\r\n                    onUploadStart={this.handleUploadStart}\r\n                    onUploadError={this.handleUploadError}\r\n                    onUploadSuccess={this.handleUploadSuccess}\r\n                    onProgress={this.handleProgress}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={10}>\r\n                    {\r\n\r\n                      (this.state.imageURL) ? <Progress percent={100} success>Uploaded</Progress> :\r\n                        this.state.isUploading ?\r\n                          <Progress percent={this.state.progress} progress color='blue'/> :\r\n                          null\r\n                    }\r\n                  </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='red' onClick={() => {this.setState({open: false})}}>Cancel</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateImage: (uId, imageUrl) => dispatch(updateImage(uId, imageUrl))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ModalUploadPicture)\r\n","import React, { Component } from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Grid, GridRow, Image, Button, Segment, Tab, GridColumn, Label, Modal, Form } from 'semantic-ui-react'\r\nimport { addFriend, removeFriend, acceptFriend } from '../../store/actions/authActions'\r\nimport CreatePost from '../createPost';\r\nimport PostList from '../feed/postList'\r\nimport FriendList from './friendList'\r\nimport UploadPicture from './modalUploadPicture';\r\nimport { updateProfile } from '../../store/actions/authActions'\r\n\r\nexport class Profile extends Component {\r\n\r\n  state = {\r\n    posts_content: null,\r\n    friends_content: null,\r\n    navigate: null,\r\n    open: false,\r\n    name: '',\r\n    privacy: null,\r\n    profile: null\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let data = {}\r\n    if ((prevState.profile === null || prevState.profile.isLoading) && nextProps.profile) {\r\n      if (nextProps.profile.privacy !== undefined) {\r\n        Object.assign(data,\r\n          {\r\n            privacy: nextProps.profile.privacy,\r\n            profile: nextProps.profile\r\n          }\r\n        )\r\n      }\r\n\r\n      if (nextProps.profile.name !== undefined) {\r\n        Object.assign(data,\r\n          {\r\n            name: nextProps.profile.name\r\n          }\r\n        )\r\n      }\r\n    }\r\n    return data\r\n  }\r\n\r\n  navigate = (destination) => {\r\n    this.setState({\r\n      navigate: destination\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    this.handleSubmitPrivacy(e, this.state.privacy)\r\n  }\r\n\r\n  handleSubmitPrivacy = (e, privacy) => {\r\n    e.preventDefault()\r\n    this.props.updateProfile(this.props.auth.uid, {name: this.state.name, privacy: privacy, profile: this.state.profile})\r\n    this.props.history.push('/profile/' + this.props.auth.uid)\r\n    this.setState({open: false})\r\n  }\r\n\r\n  togglePrivacy = (e) => {\r\n    let new_privacy = (this.state.privacy === 'private') ? 'public' : 'private'\r\n    this.setState({\r\n      privacy: new_privacy\r\n    })\r\n    this.handleSubmitPrivacy(e, new_privacy)\r\n  }\r\n\r\n  render() {\r\n    const { auth, users, profile, match, curProfilePosts, currentFriendsList} = this.props;\r\n    const curProfileUser = users && auth ? users.filter(user => user.id === match.params.id)[0] : null\r\n    const imageUrl = curProfileUser ? curProfileUser.imageUrl : null\r\n    \r\n    const isUser = auth.uid && match.params && auth.uid === match.params.id;\r\n\r\n    let friendButton = match && auth ? <Button onClick={() => {this.props.addFriend(match.params.id, auth.uid)}}>Add Friend</Button> : null\r\n    if (auth && curProfileUser && curProfileUser.friends_pending && curProfileUser.friends_pending.includes(auth.uid))\r\n      friendButton = <Button>Friend Request Sent</Button>\r\n    else if (auth && curProfileUser && curProfileUser.friends.includes(auth.uid) && match)\r\n      friendButton = <Button onClick={() => {this.props.removeFriend(match.params.id, auth.uid)}}>Remove Friend</Button>\r\n    else if (profile && profile.friends_pending && auth && match && profile.friends_pending.includes(match.params.id))\r\n      friendButton = <Button onClick={() => {this.props.acceptFriend(match.params.id, auth.uid)}}>Accept Friend Request</Button>\r\n    \r\n      \r\n    let posts_content = <div> <PostList posts={curProfilePosts} users={users} /> </div>\r\n    let friends_content = curProfileUser ? \r\n          ((currentFriendsList && match && match.params && match.params.id && currentFriendsList.includes(match.params.id)) \r\n            || (auth && match && match.params && match.params.id && auth[\"uid\"] === match.params.id) ? \r\n            <div> <FriendList users={users} friends={curProfileUser.friends} /> </div> :\r\n            <div> <FriendList users={users} friends={[]} /> </div>)\r\n             : null\r\n\r\n    let profile_panes = [\r\n    {\r\n      menuItem: 'Posts',\r\n      render: () => <Tab.Pane>{posts_content}</Tab.Pane>\r\n    },\r\n    {\r\n      menuItem: 'Friends',\r\n      render: () => <Tab.Pane>{friends_content}</Tab.Pane>\r\n    }\r\n  ]\r\n\r\n    if (this.state.navigate === '/createpost') {\r\n      return (\r\n        <div><Redirect to={this.state.navigate}/><CreatePost/></div>\r\n      )\r\n    }\r\n\r\n    \r\n    return (\r\n      <div>\r\n        <Grid centered padded='vertically'>\r\n          <GridRow>\r\n            <Segment>\r\n              { isUser ?\r\n                <UploadPicture uId={auth.uid} previousImageUrl={imageUrl} /> :\r\n                <Image src={imageUrl} size='medium' circular bordered/>\r\n              }\r\n              <br/>\r\n              <Button as='div' labelPosition='left'>\r\n                <Label basic>\r\n                  {curProfileUser ? curProfileUser.name : null }\r\n                </Label>\r\n                { isUser ?\r\n                <Modal\r\n                  trigger={<Button compact icon='edit'/>}\r\n                  open={this.state.open}\r\n                  onOpen={() => this.setState({open: true})}\r\n                  closeOnDimmerClick={false}\r\n                  closeOnDocumentClick={false}\r\n                  size='small'\r\n                  >\r\n                    <Modal.Content>\r\n                      <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Field>\r\n                          <label>New Name</label>\r\n                          <Form.Input id='name' onChange={this.handleChange} placeholder={curProfileUser ? curProfileUser.name : ''}/>\r\n                        </Form.Field>\r\n                        <Button type='submit' color='green'>Change name</Button>\r\n                        <Button floated='right' color='red'  onClick={() => this.setState({open: false})}>Cancel</Button>\r\n                      </Form>\r\n                    </Modal.Content>\r\n                  </Modal>\r\n                : null\r\n                }\r\n              </Button>\r\n\r\n              { isUser ?  // If the current profile is logged in user's profile\r\n                <div>\r\n                  <Grid>\r\n                    <Grid.Column floated='left'>\r\n                      <Button onClick={this.togglePrivacy} basic size='small' color={(this.state.privacy === 'private') ? 'red' : 'green'}>{(this.state.privacy === 'private') ? 'Private' : 'Public'}</Button>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated='right'>\r\n                      <Button floated='right' icon='plus' onClick={() => {this.navigate('/createpost')}}/>\r\n                    </Grid.Column>\r\n                  </Grid>\r\n                </div> :\r\n                  friendButton\r\n              }\r\n            </Segment>\r\n          </GridRow>\r\n          <GridRow> <GridColumn width={16}> <Tab panes={profile_panes}/> </GridColumn> </GridRow>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.navigate != null)\r\n      this.navigate(null)\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    //creates the friends list for the current user\r\n    let currentFriendsList = [\"0\"]; //This is the dummy value\r\n    for(let key in state.firestore.ordered.users)\r\n    {\r\n      if(state.firebase.auth[\"uid\"] === state.firestore.ordered.users[key][\"id\"])\r\n      {\r\n        currentFriendsList = state.firestore.ordered.users[key][\"friends\"];\r\n      }\r\n    }\r\n    \r\n    //This creates the posts on the profile that we are looking at\r\n    let curProfilePosts = [];\r\n    if(state.firestore.ordered.curPrivatePosts != null && state.firestore.ordered.curPublicPosts != null){\r\n      curProfilePosts = state.firestore.ordered.curPrivatePosts.concat(state.firestore.ordered.curPublicPosts).sort(function (a, b) {\r\n        return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];\r\n    })\r\n    }\r\n    else if(state.firestore.ordered.curPublicPosts != null){\r\n      curProfilePosts = state.firestore.ordered.publicPosts;\r\n    }\r\n    else if(state.firestore.ordered.curPrivatePosts != null){\r\n      curProfilePosts = state.firestore.ordered.curPrivatePosts;\r\n    }\r\n\r\n  return {\r\n    curProfilePosts: curProfilePosts,\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n    users: state.firestore.ordered.users,\r\n    currentFriendsList: currentFriendsList\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFriend: (profile_user_id, logged_in_user_id) => dispatch(addFriend(profile_user_id, logged_in_user_id)),\r\n    removeFriend: (profile_user_id, logged_in_user_id) => dispatch(removeFriend(profile_user_id, logged_in_user_id)),\r\n    acceptFriend: (friend_user_id, logged_in_user_id) => dispatch(acceptFriend(friend_user_id, logged_in_user_id)),\r\n    updateProfile: (uId, newInfo) => dispatch(updateProfile(uId, newInfo))\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect(props => [\r\n    { collection: 'users' },\r\n      { \r\n      collection: 'posts',\r\n      storeAs: 'curPrivatePosts',\r\n      where: [\r\n        ['authorId', '==', props.match.params.id],\r\n        [\r\n        'privacy', '==', \r\n        //get the private posts if they are friends OR they are the current user\r\n        //Otherwise we can only see their public posts\r\n        props.currentFriendsList === null || (props.match.params.id !== props.auth[\"uid\"] && !props.currentFriendsList.includes(props.match.params.id))?\r\n        '0':'private'\r\n        ],\r\n      ],\r\n     },\r\n     { \r\n      collection: 'posts',\r\n      storeAs: 'curPublicPosts',\r\n      where: [\r\n      //Alway just get the public posts, and we will add them together and sort them by their start time\r\n        ['authorId', '==', props.match.params.id],\r\n        ['privacy', '==','public'],\r\n      ],\r\n     },\r\n      \r\n  ])\r\n)(Profile);\r\n","import React, { Component } from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Divider, Container, List, Image, Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { acceptFriend, rejectFriend } from '../../store/actions/authActions'\r\n\r\n\r\nexport class PendingList extends Component {\r\n\r\n  render() {\r\n\r\n    const { auth, users, profile, acceptFriend, rejectFriend } = this.props\r\n    const friend_requests = profile ? profile.friends_pending : null\r\n\r\n    return (\r\n      <div>\r\n        <Container text>\r\n          <Divider hidden />\r\n          {(friend_requests && friend_requests.length === 0) ? <h3>No Friends Requests</h3> : null }\r\n          { friend_requests && users && friend_requests.map(friend => {\r\n            const user_info = users.filter(user => user.id === friend)[0]\r\n            const summary = user_info ? <Link to={'/profile/' + friend}> {user_info.name} </Link> : null\r\n            \r\n            return (\r\n              <List divided animated relaxed verticalAlign='middle' size='big' key={friend}>\r\n                <List.Item>\r\n                  <Image avatar src={user_info ? user_info.imageUrl : null} />\r\n                  <List.Content> <List.Header>{summary}</List.Header> </List.Content>\r\n                  <List.Content floated='right'>\r\n                    <List.Description as='a' onClick={() => acceptFriend(friend, auth.uid)}>\r\n                      <Icon name='check' color='green'/>Accept\r\n                    </List.Description>\r\n                    <List.Description as='a' onClick={() => rejectFriend(friend, auth.uid)}>\r\n                      <Icon name='close' color='red'/>Reject\r\n                    </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n                <Divider/>\r\n              </List>\r\n            )\r\n          })}\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n    users: state.firestore.ordered.users\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    acceptFriend: (friend_user_id, logged_in_user_id) => dispatch(acceptFriend(friend_user_id, logged_in_user_id)),\r\n    rejectFriend: (friend_user_id, logged_in_user_id) => dispatch(rejectFriend(friend_user_id, logged_in_user_id))\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: 'users' }])\r\n)(PendingList)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Sidebar, Menu, Segment, Label, Image } from 'semantic-ui-react'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\nclass SideNavbar extends Component {\r\n    LOGIN = 'LOGIN'\r\n    PROFILE = 'PROFILE'\r\n    DISCOVER = 'DISCOVER'\r\n    FEED = 'FEED'\r\n    REQUESTS = 'REQUESTS'\r\n    \r\n    state = {\r\n        redirect_target: null,\r\n        targets: {\r\n            FEED: '/',\r\n            LOGIN: '/login',\r\n            PROFILE: ('/profile/' + this.props.auth.uid),\r\n            DISCOVER: '/discover',\r\n            REQUESTS: '/requests'\r\n        },\r\n        visible: false,\r\n    }\r\n   \r\n    load = (target) => {\r\n        this.setState({\r\n            redirect_target: target,\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { profile } = this.props;\r\n        let imageTop = profile ? <Image circular centered size='mini' src={profile.imageUrl} alt=\"\"/> : null\r\n        let imageBot = profile ? <Image circular centered size='small' src={profile.imageUrl} alt=\"\"/> : null\r\n        let requests_num = profile && profile.friends_pending ? profile.friends_pending.length : 0\r\n        const requests = (requests_num > 0) ? \r\n            <Menu.Item onClick={() => {this.load(this.REQUESTS)}}>Friend Requests:\r\n                <Label color='teal'>{requests_num} </Label>\r\n            </Menu.Item> : null\r\n\r\n\r\n        const output = (\r\n            <div className='fullsize_div' id='sidebar_2'>\r\n                <Menu fixed='top' className='top_menu'>\r\n                    <Menu.Item icon='th list' onClick={() => {this.setState({visible: !this.state.visible})}}/>\r\n                    <Menu.Item header onClick={() => {this.load(this.FEED)}}>Runtime Terror</Menu.Item>\r\n                    <Menu.Item onClick={() => {this.load(this.PROFILE)}}>{imageTop}</Menu.Item>\r\n                    {requests}\r\n                </Menu>\r\n                <div id='sidebar'>\r\n                <Sidebar.Pushable as={Segment}>\r\n                    <Sidebar as={Menu} animation={'slide along'} direction={'left'} icon='labeled' inverted vertical visible={this.state.visible} onHide={()=>this.setState({visible: false})} width='thin'>\r\n                        <Menu.Item onClick={() => {this.load(this.PROFILE)}} name='Profile'><br/>{imageBot}<br/>Profile</Menu.Item>,\r\n                        <Menu.Item onClick={() => {this.load(this.DISCOVER)}} icon='map' name='Discover'/>,\r\n                        <Menu.Item onClick={() => {this.load(this.FEED)}} icon='sitemap' name='Feed'/>,\r\n                        <Menu.Item onClick={this.props.signOut} name='Sign out' icon='sign out' position='right'/>\r\n                    </Sidebar>\r\n                    <Sidebar.Pusher dimmed={this.state.visible}>\r\n                            {this.props.content}\r\n                    </Sidebar.Pusher>\r\n                </Sidebar.Pushable>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.redirect_target != null) {\r\n            let to_link = this.state.targets[this.state.redirect_target]\r\n            return (<div className='fullsize_div'><Redirect to={to_link}/>{output}</div>)\r\n        }\r\n        else {            \r\n            return output\r\n        }\r\n    }\r\n\r\n    // Clear redirect_target after render\r\n    componentDidUpdate() {\r\n        if (this.state.redirect_target != null) {\r\n            this.setState({\r\n                redirect_target: null\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavbar)","import React, { Component } from 'react'\r\n\r\nexport class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>404: Page not found</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Menu, Loader } from 'semantic-ui-react';\r\nimport Discover from './components/discover/discover'\r\nimport TokenHandler from './components/discover/tokenHandler'\r\nimport Login from './components/layout/login/login'\r\nimport Feed from './components/feed/feed'\r\nimport Profile from './components/profile/profile'\r\nimport PendingList from './components/profile/pendingList'\r\nimport SideNavbar from './components/layout/sideNavbar';\r\nimport CreatePost from './components/createPost'\r\nimport NotFound from './components/404'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = { isLoading: true }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.auth.isLoaded && (nextProps.auth.isEmpty || nextProps.auth.uid)) {\r\n      return { isLoading: false }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props\r\n    const content = (\r\n      <Switch>\r\n        <Route exact path='/'           component={Feed} />\r\n        <Route path='/login'            component={Login} />\r\n        <Route path='/discover'         component={Discover} />\r\n        <Route path='/tokenHandler'     component={TokenHandler} />\r\n        <Route path='/profile/:id'      component={Profile} />\r\n        <Route path='/createpost'       component={CreatePost} />\r\n        <Route path='/requests'         component={PendingList} />\r\n        <Route                          component={NotFound} />\r\n      </Switch>\r\n    )\r\n\r\n    // Redirect forces user to load at Discover page if already logged in\r\n    const showLogin = (auth.isLoaded && auth.uid) ? \r\n      <SideNavbar content={content}/> : \r\n      <div><Redirect to='/'/><Menu><Menu.Item header>Runtime Terror</Menu.Item></Menu><Login/></div>\r\n\r\n    return (\r\n      this.state.isLoading ? <div className='fullsize_div'> <Loader active size='massive'>Loading</Loader> </div>:\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          { showLogin }\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nconst initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  \r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error')\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed!'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success')\r\n      return state\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    case 'USER_IMAGE': \r\n      console.log('Updated user image', action.uId, action.imageUrl)\r\n      return state\r\n\r\n    case 'USER_IMAGE_ERROR': \r\n      console.log('Update user image error', action.err)\r\n      return state\r\n\r\n    case 'USER_UPDATE': \r\n      console.log('Updated user profile', action.uId, action.newInfo)\r\n      return state\r\n\r\n    case 'USER_UPDATE_ERROR': \r\n      console.log('Update user profile error', action.err)\r\n      return state\r\n\r\n    case 'SEND_FRIEND_REQUEST': \r\n      console.log('Sent friend request', action.profile_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'SEND_FRIEND_REQUEST_ERROR': \r\n      console.log('Send friend request error', action.err)\r\n      return state\r\n\r\n    case 'REMOVE_FRIEND': \r\n      console.log('Sent friend request', action.profile_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'REMOVE_FRIEND_ERROR': \r\n      console.log('Send friend request error', action.err)\r\n      return state\r\n\r\n    case 'ACCEPT_FRIEND': \r\n      console.log('Accepted friend request', action.friend_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'ACCEPT_FRIEND_ERROR': \r\n      console.log('Accept friend request error', action.err)\r\n      return state\r\n\r\n    case 'REJECT_FRIEND': \r\n      console.log('Rejected friend request', action.friend_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'REJECT_FRIEND_ERROR': \r\n      console.log('Reject friend request error', action.err)\r\n      return state\r\n\r\n    case 'SPOTIFY_TOKEN': \r\n      console.log('Updated user spotify token', action.uId)\r\n      return state\r\n\r\n    case 'SPOTIFY_TOKEN_ERROR': \r\n      console.log('Update user spotify token error', action.err)\r\n      return state\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default authReducer","\r\nconst initState = {\r\n  posts: [\r\n    {'song': null}\r\n  ]\r\n}\r\n  \r\nconst postReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_POST': \r\n      console.log('Created post:', action.post);\r\n      return state;\r\n\r\n    case 'CREATE_POST_ERROR': \r\n      console.log('Create post error:', action.err);\r\n      return state;\r\n\r\n    //TODO: add functionality for deleting and editing\r\n    /*\r\n    case 'DELETE_POST': \r\n      console.log('Deleted post:', action.project);\r\n      return state;\r\n    case 'DELETE_POST_ERROR': \r\n      console.log('Delete post error:', action.err);\r\n      return state;\r\n    case 'EDIT_POST': \r\n      console.log('Edited post:', action.project);\r\n      return state;\r\n    case 'EDIT_POST_ERROR': \r\n      console.log('Edit post error:', action.err);\r\n      return state;\r\n    */\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer\r\n","import authReducer from './authReducer'\r\nimport postReducer from './postReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  post: postReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\n\r\nexport default rootReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase  } from 'react-redux-firebase';\r\nimport firebase from './config/fbConfig'\r\n\r\n\r\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\r\nconst rrfConfig = {\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  userProfile: 'users',\r\n  attachAuthIsReady: true,\r\n};\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebase), // Get access to firestore via getFirestore function\r\n));\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}