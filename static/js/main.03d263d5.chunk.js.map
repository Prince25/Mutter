{"version":3,"sources":["components/discover/songCard.js","components/discover/songGrid.js","components/discover/cancellablePromise.js","components/discover/discover.js","config/fbConfig.js","store/actions/authActions.js","components/discover/tokenHandler.js","components/layout/login/signup.js","components/layout/login/signin.js","components/layout/login/loginForm.js","components/layout/login/login.js","components/feed/postSummary.js","components/feed/postList.js","components/feed/feed.js","components/createPost.js","store/actions/postActions.js","components/profile/friendList.js","components/profile/modalUploadPicture.js","components/profile/profile.js","components/profile/pendingList.js","components/layout/sideNavbar.js","components/404.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/postReducer.js","store/reducers/rootReducer.js","index.js"],"names":["SongCard","state","isOpen","handleOpen","setState","timeout","setTimeout","handleClose","clearTimeout","makePost","create_url","props","window","location","href","this","_token","url","uri","deviceid","type","account_type","fetch","method","headers","authorization","query","body","JSON","stringify","uris","context_uri","open","title","artist","album","art_url","player_connected","listen_button","Button","fluid","positive","onClick","playSong","Popup","trigger","basic","color","content","on","onClose","onOpen","position","Card","centered","raised","Content","floated","icon","Header","Meta","Image","src","extra","Component","SongGrid","song_info","Array","isArray","song_cards","map","info","index","Grid","Column","stretched","key","rows","Math","ceil","length","fill","currValue","Row","slice","columns","SongInfo","makeCancellable","promise","isCancelled","Promise","resolve","reject","then","val","catch","error","cancel","spotifyApi","SpotifyWebApi","base_url","Discover","handleSearchChange","e","value","results","searchButton","searchTracks","searchedTracks","tracks","items","searchArtists","searchedArtists","artists","searchAlbums","searchedAlbums","albums","searchPlaylists","searchedPlaylists","playlists","onPrevClick","player","previousTrack","onPlayClick","togglePlay","onNextClick","nextTrack","createPost","undefined","trackUrl","trackName","loggedIn","newReleases","recentlyPlayed","topTracks","deviceId","artistName","albumName","playing","duration","albumArt","accountTypePromise","newReleasesPromise","recentSongsPromise","topTracksPromise","searchTracksPromise","searchArtistsPromise","searchAlbumsPromise","searchPlaylistsPromise","initializeOnceMounted","route","disconnect","clearInterval","token","getToken","getAccessToken","setAccessToken","getAccountType","getNewReleases","getRecentSongs","getTopTracks","playerCheckInterval","history","listen","onRouteChange","bind","setInterval","initialize","promises","i","accountType","getMe","data","product","err","console","log","status","confirm","limit","offset","country","recentSongs","getMyRecentlyPlayedTracks","getMyTopTracks","keyword","Spotify","Player","name","getOAuthToken","cb","createEventHandlers","connect","checkForPlayer","onStateChanged","a","async","device_id","transferPlaybackHere","track_window","currentTrack","current_track","id","join","paused","images","searchResults","newAlbums","recents","top","min","owner","display_name","external_urls","spotify","access_token","push","track","Menu","Item","inverted","className","checkForPlayer_driver","Search","showNoResults","size","onSearchChange","_","debounce","placeholder","Group","labeled","secondary","style","whiteSpace","charAt","toUpperCase","align","fontSize","expand","expandSection","nextProps","prevState","profile","isLoaded","spotify_token","SongSection","Container","as","textAlign","Divider","hidden","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","acceptFriend","friend_user_id","logged_in_user_id","dispatch","getState","getFirebase","firestore","getFirestore","collection","doc","update","friends_pending","FieldValue","arrayRemove","friends","arrayUnion","TokenHandler","getHashParams","hashParams","r","q","hash","substring","exec","decodeURIComponent","handleToken","auth","isEmpty","updateToken","uid","Loader","active","uId","callback","SignUp","email","password","submit","signUp","change","target","authError","Form","onSubmit","Field","Input","label","onChange","control","ButtonContent","Icon","newUser","createUserWithEmailAndPassword","resp","user","set","privacy","imageUrl","SignIn","signIn","creds","credentials","signInWithEmailAndPassword","LoginForm","signing_up","sign_up","word","signing_area","Or","Segment","Login","to","padded","GridRow","PostSummary","post","users","filter","authorId","summary","author","song","rating","Event","image","date","moment","createdAt","toDate","format","extraText","comment","PostList","posts","Feed","friendsPosts","explorePosts","feedPanes","menuItem","render","Tab","Pane","panes","newPosts","Object","assign","compose","currentFriendsList","ordered","sortedFriendsArray","sort","b","publicPosts","sortedExploreArray","firestoreConnect","storeAs","where","CreatePost","handleChange","handleRating","handleSubmit","preventDefault","toggle","params","songName","SongName","songUrl","SongUrl","text","widths","required","readOnly","disabled","Radio","defaultChecked","Dropdown","inline","options","TextArea","Post","add","Date","FriendList","friend","friend_info","fitted","ModalUploadPicture","isUploading","progress","imageURL","handleUploadStart","handleProgress","handleUploadError","handleUploadSuccess","filename","storage","ref","child","getDownloadURL","updateImage","handleModalClose","previousImageUrl","Modal","circular","bordered","closeOnDimmerClick","closeOnDocumentClick","divided","wrapped","width","accept","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","Progress","percent","success","Actions","Profile","posts_content","friends_content","navigate","destination","handleSubmitPrivacy","updateProfile","togglePrivacy","new_privacy","match","curProfilePosts","curProfileUser","isUser","friendButton","addFriend","includes","removeFriend","profile_panes","labelPosition","Label","compact","GridColumn","isLoading","curPrivatePosts","curPublicPosts","concat","profile_user_id","newInfo","PendingList","rejectFriend","friend_requests","user_info","List","animated","relaxed","verticalAlign","avatar","Description","SideNavbar","LOGIN","PROFILE","DISCOVER","FEED","REQUESTS","redirect_target","targets","visible","load","imageTop","alt","imageBot","requests_num","requests","output","fixed","header","Sidebar","Pushable","animation","direction","vertical","onHide","signOut","Pusher","dimmed","to_link","NotFound","App","exact","path","component","showLogin","basename","process","Boolean","hostname","initState","authReducer","action","message","postReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03d263d5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Button, Image, Popup } from 'semantic-ui-react'\r\n\r\n\r\nconst timeoutLength = 1500\r\n\r\nclass SongCard extends Component {\r\n\r\n    state = { isOpen: false }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ isOpen: true })\r\n\r\n        this.timeout = setTimeout(() => {\r\n        this.setState({ isOpen: false })\r\n        }, timeoutLength)\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false })\r\n        clearTimeout(this.timeout)\r\n    }\r\n\r\n    playSong(){\r\n        let { _token, url, uri, deviceid, type, account_type } = this.props;\r\n\r\n        if (account_type === 'premium') {          \r\n            if(type === \"track\"){\r\n                fetch(\"https://api.spotify.com/v1/me/player/play\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    authorization: `Bearer ${_token}`,\r\n                },\r\n                query:{\r\n                    \"device_id\":deviceid\r\n                },\r\n                body: JSON.stringify({\r\n                    uris:[uri]\r\n                }),\r\n            });\r\n            }\r\n            if(type === \"album\" || type === \"artist\" || type === \"playlist\"){\r\n                fetch(\"https://api.spotify.com/v1/me/player/play\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    authorization: `Bearer ${_token}`,\r\n                },\r\n                query:{\r\n                    \"device_id\":deviceid\r\n                },\r\n                body: JSON.stringify({\r\n                    context_uri:uri\r\n                }),\r\n            });\r\n            }\r\n        } else if (account_type === 'free') {\r\n            window.open(url, '_blank noreferrer noopener')\r\n        }        \r\n    }\r\n\r\n    makePost = () => {\r\n        let { create_url } = this.props;\r\n        window.location.href = create_url;\r\n    }\r\n\r\n    render() {\r\n        let { title, artist, album, art_url, type, account_type, player_connected } = this.props;\r\n\r\n        const listen_button = (account_type === 'premium' && !player_connected) ? \r\n            <Popup\r\n            trigger={<Button fluid basic color='green'>Listen!</Button>}\r\n            content={'Please launch Web Player first!'}\r\n            on='click'\r\n            open={this.state.isOpen}\r\n            onClose={this.handleClose}\r\n            onOpen={this.handleOpen}\r\n            position='bottom center'\r\n            /> :\r\n            <Button fluid positive onClick={() => this.playSong()}>Listen!</Button>\r\n\r\n        return (\r\n            <Card centered raised>\r\n                <Card.Content>\r\n                    {type === 'track' ? <Popup content='Create a post' position='top center' trigger={<Button floated='right' icon='plus' onClick={this.makePost}/>}/> : null}\r\n                    <Card.Header>{title}</Card.Header>\r\n                    <Card.Meta>{album + ' - ' + artist}</Card.Meta>\r\n                    <Image src={art_url}/>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    {listen_button}\r\n                </Card.Content>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SongCard;","import React, { Component } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport SongCard from './songCard'\r\n\r\nclass SongGrid extends Component {\r\n\r\n    render() {\r\n        const { song_info } = this.props\r\n\r\n        if (!Array.isArray(song_info)) {\r\n            return null;\r\n        }\r\n        else {            \r\n            const song_cards = song_info.map((info, index) => <Grid.Column stretched key={index}><SongCard title={info.title} artist={info.artist} album={info.album} art_url={info.art_url}\r\n                 url={info.url} create_url={info.create_url} _token={info._token} uri={info.uri} deviceid={info.deviceid} type={info.type} account_type={info.account_type} player_connected={info.player_connected} /></Grid.Column>)\r\n            const rows = Array(Math.ceil(song_info.length / 5)).fill().map((currValue, index) => <Grid.Row key={index}>{song_cards.slice(index*5, index*5 + 5)}</Grid.Row>)\r\n            return (\r\n                <Grid columns='equal'>\r\n                    {rows}\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class SongInfo {\r\n    title;\r\n    artist;\r\n    album;\r\n    art_url;\r\n    url;\r\n    create_url;\r\n    _token;\r\n    uri;\r\n    deviceid;\r\n    type;\r\n    account_type;\r\n    player_connected;\r\n\r\n    constructor(title, artist, album, art_url, url, create_url, _token, uri, deviceid, type, account_type, player_connected) {\r\n        this.title = title\r\n        this.artist = artist\r\n        this.album = album\r\n        this.art_url = art_url\r\n        this.url = url\r\n        this.create_url = create_url\r\n        this._token = _token\r\n        this.uri = uri\r\n        this.deviceid = deviceid\r\n        this.type = type\r\n        this.account_type = account_type\r\n        this.player_connected = player_connected\r\n    }\r\n}\r\n\r\nexport default SongGrid;","// Based on solution found here: https://github.com/facebook/react/issues/5465#issuecomment-157888325\r\n\r\nexport const makeCancellable = (promise) => {\r\n    let isCancelled = false\r\n\r\n    const wrappedPromise = new Promise((resolve, reject) => {\r\n        promise.then( (val) => {\r\n            isCancelled ? reject({isCancelled: true}) : resolve(val)\r\n        });\r\n\r\n        promise.catch( (error) => {\r\n            isCancelled ? reject({isCancelled: true}) : reject(error)\r\n        })\r\n    })\r\n    \r\n    return {\r\n        promise: wrappedPromise,\r\n        cancel() {\r\n            isCancelled = true\r\n        },\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Grid, Search, Header, Divider, Button, Menu, Image, Popup, Card } from 'semantic-ui-react'\r\nimport SongGrid, { SongInfo } from './songGrid'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { makeCancellable } from './cancellablePromise';\r\nimport _ from 'lodash'\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\nconst base_url = \"http://localhost:3000\"\r\n\r\nexport class Discover extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      loggedIn: false,\r\n      searchButton: 'songs',\r\n      searchedTracks: [],\r\n      searchedArtists: [],\r\n      searchedAlbums: [],\r\n      searchedPlaylists: [],\r\n      value: '',\r\n      results: [],\r\n      newReleases: [],\r\n      recentlyPlayed: [],\r\n      topTracks: [],\r\n      _token: '',\r\n      deviceId: \"\",\r\n      error: \"\",\r\n      trackName: undefined,\r\n      trackUrl: undefined,\r\n      artistName: undefined,\r\n      albumName: undefined,\r\n      playing: false,\r\n      position: 0,\r\n      duration: 1,\r\n      albumArt: \"\",\r\n      player_connected: false,\r\n      account_type: 'Not Logged In. Click to authenticate!',\r\n      accountTypePromise: null,\r\n      newReleasesPromise: null,\r\n      recentSongsPromise: null,\r\n      topTracksPromise: null,\r\n      searchTracksPromise: null,\r\n      searchArtistsPromise: null,\r\n      searchAlbumsPromise: null,\r\n      searchPlaylistsPromise: null,\r\n      initializeOnceMounted: undefined\r\n    }\r\n  }\r\n  \r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.profile.isLoaded && nextProps.profile.spotify_token && prevState._token !== nextProps.profile.spotify_token) {\r\n      return { _token: nextProps.profile.spotify_token, loggedIn: true }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  onRouteChange(route) {\r\n    if(this.state.player_connected){\r\n      this.player.disconnect();\r\n    }\r\n  }\r\n  \r\n  initialize() {\r\n    if (this.state.loggedIn) {\r\n      clearInterval(this.initializeOnceMounted)\r\n      const token = this.state._token;\r\n      const getToken = spotifyApi.getAccessToken();\r\n      if (token) {\r\n        spotifyApi.setAccessToken(token);\r\n      }\r\n      else if(getToken){\r\n        spotifyApi.setAccessToken(getToken);\r\n      }\r\n      this.getAccountType();\r\n      this.getNewReleases()\r\n      this.getRecentSongs();\r\n      this.getTopTracks();\r\n      this.playerCheckInterval = null;\r\n      this.props.history.listen(this.onRouteChange.bind(this));\r\n    } \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeOnceMounted = setInterval(() => this.initialize(), 20)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {accountTypePromise, newReleasesPromise, recentSongsPromise, topTracksPromise, searchTracksPromise, searchArtistsPromise, searchAlbumsPromise, searchPlaylistsPromise} = this.state\r\n    const promises = [accountTypePromise, newReleasesPromise, recentSongsPromise, topTracksPromise, searchTracksPromise, searchArtistsPromise, searchAlbumsPromise, searchPlaylistsPromise]\r\n    for (let i = 0; i < promises.length; i++) {\r\n      if (promises[i]) {\r\n        promises[i].cancel()\r\n      }\r\n    }\r\n    if (this.initializeOnceMounted !== undefined)\r\n      clearInterval(this.initializeOnceMounted)\r\n  }\r\n\r\n  getAccountType(){\r\n    let accountType = makeCancellable(spotifyApi.getMe())\r\n    \r\n    this.setState({accountTypePromise: accountType}, () => {\r\n      accountType.promise.then((data) => {\r\n        const product = data.product === 'premium' ? 'premium' : 'free' // Since it may return 'open', which is also free\r\n        this.setState({account_type: product});\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n        if (err.status === 401)\r\n          if (window.confirm(\"Token Expired! Please re-login to Spotify!\")) \r\n            window.location.href = 'http://localhost:8888';\r\n      })\r\n    })\r\n  }\r\n\r\n  getNewReleases(){\r\n    let newReleases = makeCancellable(spotifyApi.getNewReleases({ limit : 5, offset: 0, country: 'US' }))\r\n    this.setState({newReleasesPromise: newReleases}, () => {\r\n      newReleases.promise.then((data) => {\r\n        this.setState({newReleases: data.albums.items});\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      })\r\n    })\r\n  }\r\n  \r\n  getRecentSongs(){\r\n    let recentSongs = makeCancellable(spotifyApi.getMyRecentlyPlayedTracks({ limit: 5 }))\r\n    this.setState({recentSongsPromise: recentSongs}, () => {\r\n      recentSongs.promise.then((data) => {\r\n        this.setState({\r\n          recentlyPlayed: data.items\r\n        });\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      })\r\n    })\r\n  }\r\n\r\n  getTopTracks(){\r\n    let topTracks = makeCancellable(spotifyApi.getMyTopTracks({ limit: 5 }))\r\n    this.setState({topTracksPromise: topTracks}, () => {\r\n      topTracks.promise.then((data) => {\r\n        this.setState({\r\n          topTracks: data.items\r\n        });\r\n        return data;\r\n      }, function(err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      })\r\n    })\r\n  }\r\n\r\n  searchTracks(keyword){\r\n    let tracks = makeCancellable(spotifyApi.searchTracks(keyword))\r\n    this.setState({searchTracksPromise: tracks})\r\n\r\n    tracks.promise.then((data) => {\r\n      this.setState({searchedTracks: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  searchAlbums(keyword){\r\n    let albums = makeCancellable(spotifyApi.searchAlbums(keyword))\r\n    this.setState({searchAlbumsPromise: albums})\r\n\r\n    albums.promise.then((data) => {\r\n      this.setState({searchedAlbums: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  searchArtists(keyword){\r\n    let artists = makeCancellable(spotifyApi.searchArtists(keyword))\r\n    this.setState({searchArtistsPromise: artists})\r\n\r\n    artists.promise.then((data) => {\r\n      this.setState({searchedArtists: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  searchPlaylists(keyword){\r\n    let playlists = makeCancellable(spotifyApi.searchPlaylists(keyword))\r\n    this.setState({searchPlaylistsPromise: playlists})\r\n    \r\n    playlists.promise.then((data) => {\r\n      this.setState({searchedPlaylists: data});\r\n      return data;\r\n    }, function(err) {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState({value: '', results: []})\r\n\r\n      switch(this.state.searchButton) {\r\n        case 'songs':\r\n          this.searchTracks(value)\r\n          this.setState({\r\n            results: (this.state.searchedTracks !== [] && this.state.searchedTracks.tracks && this.state.searchedTracks.tracks.items) ? this.state.searchedTracks.tracks.items : []\r\n          })\r\n          break;\r\n\r\n        case 'artists':\r\n          this.searchArtists(value)\r\n          this.setState({\r\n            results: (this.state.searchedArtists !== [] && this.state.searchedArtists.artists && this.state.searchedArtists.artists.items) ? this.state.searchedArtists.artists.items : []\r\n          })\r\n          break;\r\n          \r\n        case 'albums':\r\n          this.searchAlbums(value)\r\n          this.setState({\r\n            results: (this.state.searchedAlbums !== [] && this.state.searchedAlbums.albums && this.state.searchedAlbums.albums.items) ? this.state.searchedAlbums.albums.items : []\r\n          })\r\n          break;\r\n\r\n        case 'playlists':\r\n          this.searchPlaylists(value)\r\n          this.setState({\r\n            results: (this.state.searchedPlaylists !== [] && this.state.searchedPlaylists.playlists && this.state.searchedPlaylists.playlists.items) ? this.state.searchedPlaylists.playlists.items : []\r\n          })\r\n          break;\r\n\r\n        default:\r\n          this.setState({\r\n            results: []\r\n          }) \r\n          break;\r\n      }\r\n    }, 20)\r\n\r\n  }\r\n\r\n  checkForPlayer() {\r\n    const { _token } = this.state;\r\n  \r\n    if (window.Spotify !== null) {\r\n      \r\n      clearInterval(this.playerCheckInterval);\r\n\r\n      this.player = new window.Spotify.Player({\r\n        name: \"Runtime Terror's Spotify Player\",\r\n        getOAuthToken: cb => { cb(_token); },\r\n      });\r\n      this.createEventHandlers();\r\n  \r\n      this.player.connect();\r\n      const player_connected = true;\r\n      this.setState({player_connected});\r\n    }\r\n  }\r\n\r\n  checkForPlayer_driver(){\r\n    this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 10);\r\n  }\r\n\r\n  createEventHandlers() {\r\n    this.player.on('initialization_error', e => { console.error(e); });\r\n    this.player.on('authentication_error', e => {\r\n      console.error(e);\r\n      this.setState({ loggedIn: false });\r\n    });\r\n    this.player.on('account_error', e => { console.error(e); });\r\n    this.player.on('playback_error', e => { console.error(e); });\r\n  \r\n    // Playback status updates  \r\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\r\n    // Ready\r\n    this.player.on('ready', async data => {\r\n      let { device_id } = data;\r\n      console.log(\"Let the music play on!\");\r\n      this.setState({ deviceId: device_id });\r\n      this.transferPlaybackHere();\r\n    });\r\n  }\r\n\r\n  onStateChanged(state) {\r\n    // if we're no longer listening to music, we'll get a null state.\r\n    if (state !== null) {\r\n      const {\r\n        current_track: currentTrack,\r\n        position,\r\n        duration,\r\n      } = state.track_window;\r\n\r\n      const trackName = currentTrack.name\r\n      const trackUrl = \"https://open.spotify.com/track/\" + currentTrack.id\r\n      const albumName = currentTrack.album.name\r\n      const artistName = currentTrack.artists\r\n        .map(artist => artist.name)\r\n        .join(\", \");\r\n      const playing = !state.paused;\r\n      const albumArt = currentTrack.album.images[0].url;\r\n      this.setState({\r\n        position,\r\n        duration,\r\n        trackName,\r\n        trackUrl: trackUrl,\r\n        albumName,\r\n        artistName,\r\n        playing,\r\n        albumArt,\r\n      })\r\n    }\r\n  }\r\n\r\n  onPrevClick = () => {\r\n    if(this.state.player_connected){\r\n      this.player.previousTrack();\r\n    }\r\n  }\r\n  \r\n  onPlayClick = () => {\r\n    if(this.state.player_connected){\r\n      this.player.togglePlay();\r\n    }\r\n  }\r\n  \r\n  onNextClick = () => {\r\n    if(this.state.player_connected){\r\n      this.player.nextTrack();\r\n    }\r\n  }\r\n  \r\n  transferPlaybackHere() {\r\n    const { deviceId, _token } = this.state;\r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: `Bearer ${_token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"device_ids\": [ deviceId ],\r\n        \"play\": false,\r\n      }),\r\n    });\r\n  }\r\n\r\n  createPost = () => { \r\n    if (this.state.trackUrl === undefined) {\r\n      window.location.href = base_url + \"/createpost/#SongName=\" + this.state.trackName\r\n    }\r\n    else {\r\n      window.location.href = base_url + \"/createpost/#SongName=\" + this.state.trackName + \"&SongUrl=\" + this.state.trackUrl\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, results, recentlyPlayed, topTracks, newReleases, trackName, artistName, albumName, albumArt, playing, _token, deviceId, account_type, player_connected } = this.state\r\n\r\n    let searchResults = []\r\n    let newAlbums = []\r\n    const recents = []\r\n    const top = []\r\n    let i;\r\n\r\n    if (results !== 'undefined') {\r\n      for (i = 0; i < Math.min(results.length, 5); i++) {\r\n        let title = results[i].name\r\n        let artist = results[i].type === 'track' ? results[i].artists[0].name : results[i].type === 'playlist' ? results[i].owner.display_name : results[i].type === 'album' ? results[i].artists[0].name : ''\r\n        let album = results[i].type === 'track' ? results[i].album.name : ''\r\n        let art_url = results[i].type === 'artist' || results[i].type === 'playlist' || results[i].type === 'album' ? (results[i].images.length > 0 ? results[i].images[0].url : '') : results[i].album.images[0].url\r\n        let url = results[i].external_urls.spotify\r\n        let access_token = _token\r\n        let uri = results[i].uri\r\n        let deviceid = deviceId\r\n        let type = results[i].type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        searchResults.push(new SongInfo(title, artist, album, art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    } \r\n\r\n    if (recentlyPlayed !== 'undefined') {\r\n      for (i = 0; i < Math.min(recentlyPlayed.length, 5); i++) {\r\n        let title = recentlyPlayed[i].track.name\r\n        let artist = recentlyPlayed[i].track.artists[0].name\r\n        let album = recentlyPlayed[i].track.album.name\r\n        let art_url = recentlyPlayed[i].track.album.images[0].url\r\n        let url = recentlyPlayed[i].track.external_urls.spotify\r\n        let access_token = _token\r\n        let uri = recentlyPlayed[i].track.uri\r\n        let deviceid = deviceId\r\n        let type = recentlyPlayed[i].track.type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        recents.push(new SongInfo(title, artist, album, art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    }\r\n\r\n    if (topTracks !== 'undefined') {\r\n    for (i = 0; i < Math.min(topTracks.length, 5); i++) {\r\n        let title = topTracks[i].name\r\n        let artist = topTracks[i].artists[0].name\r\n        let album = topTracks[i].album.name\r\n        let art_url = topTracks[i].album.images[0].url\r\n        let url = topTracks[i].external_urls.spotify\r\n        let access_token = _token\r\n        let uri = topTracks[i].uri\r\n        let deviceid = deviceId\r\n        let type = topTracks[i].type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        top.push(new SongInfo(title, artist, album, art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    }\r\n\r\n    if (newReleases !== 'undefined') {\r\n      for (i = 0; i < Math.min(newReleases.length, 5); i++) {\r\n        let title = newReleases[i].name\r\n        let artist = newReleases[i].artists[0].name\r\n        let art_url = newReleases[i].images[0].url\r\n        let url = newReleases[i].external_urls.spotify\r\n        let access_token = _token\r\n        let uri = newReleases[i].uri\r\n        let deviceid = deviceId\r\n        let type = newReleases[i].type\r\n        let create_url = base_url + \"/createpost/#SongName=\" + title + \"&SongUrl=\" + url\r\n        newAlbums.push(new SongInfo(title, artist, \"\", art_url, url, create_url, access_token, uri, deviceid, type, account_type, player_connected))\r\n      }\r\n    }\r\n\r\n    let player =\r\n      <Menu.Item>\r\n        <Grid>\r\n          <Button key={0} inverted icon='backward' onClick={this.onPrevClick}></Button>\r\n          <Button key={1} inverted icon={(playing) ? 'pause' : 'play'} onClick={this.onPlayClick}></Button>\r\n          <Button key={2} inverted icon='forward' onClick={this.onNextClick}></Button>\r\n          <Popup key={3} trigger={<Menu.Item>{trackName}</Menu.Item>} position='bottom center'>\r\n          <Popup.Content>\r\n            <Card centered raised>\r\n            <Card.Content>\r\n                <Card.Header>{trackName}</Card.Header>\r\n                <Card.Meta>{albumName + ' - ' + artistName}</Card.Meta>\r\n                <Image src={albumArt}/>\r\n            </Card.Content>\r\n            </Card>\r\n          </Popup.Content>\r\n          </Popup>\r\n          <Popup key={4} trigger={<Button inverted icon='plus' onClick={this.createPost}/>} position='bottom center'>\r\n            <Popup.Content>\r\n              Create post\r\n            </Popup.Content>\r\n          </Popup>\r\n        </Grid>\r\n      </Menu.Item>\r\n    return (\r\n      <div className='Discover'>\r\n        { // Top bar for player\r\n          <Menu inverted>\r\n            { this.state.account_type === 'premium' ? // Show Player only if User is Premium on Spotify\r\n            (this.state.loggedIn && !(this.state.player_connected && trackName !== undefined)) ? // Show \"button\" when logged in and either we have not started the web player, or the webplayer hasn't loaded yet (checked based on song name)\r\n              <Menu.Item onClick={() => this.checkForPlayer_driver()}>\r\n                Launch Web Player\r\n              </Menu.Item>\r\n              :\r\n              player : null\r\n          }\r\n\r\n\r\n            <Menu.Item position='right' onClick={()=>console.log()}>\r\n              <Grid centered>\r\n                <Search fluid\r\n                  showNoResults={false}\r\n                  size='large'\r\n                  onSearchChange={_.debounce(this.handleSearchChange, 20)}\r\n                  value={value}\r\n                  placeholder={'Search for ' + this.state.searchButton + '...'}\r\n                  />\r\n                <Button.Group labeled>\r\n                  <Button positive={this.state.searchButton === 'songs'} secondary content='Song' onClick={() => this.setState({value: '', results: [], searchButton: 'songs'})} />\r\n                  <Button positive={this.state.searchButton === 'artists'} secondary content='Artist' onClick={() => this.setState({value: '', results: [], searchButton: 'artists'})} />\r\n                  <Button positive={this.state.searchButton === 'albums'} secondary content='Album' onClick={() => this.setState({value: '', results: [], searchButton: 'albums'})} />\r\n                  <Button positive={this.state.searchButton === 'playlists'} secondary content='Playlist' onClick={() => this.setState({value: '', results: [], searchButton: 'playlists'})} />\r\n                </Button.Group>\r\n              </Grid>\r\n            </Menu.Item>\r\n\r\n            { this.state.loggedIn ?\r\n              <Menu.Item href='http://localhost:8888'>\r\n                Spotify Status: <p style={{color: (this.state.account_type === 'premium') ? 'gold' : 'green', whiteSpace: 'pre'}}> {this.state.account_type.charAt(0).toUpperCase() + this.state.account_type.slice(1)} </p>\r\n              </Menu.Item> :\r\n              <Menu.Item href='http://localhost:8888'>\r\n                Sign In To Spotify  \r\n              </Menu.Item>\r\n            }\r\n          </Menu>\r\n        }\r\n\r\n        {!this.state.loggedIn && this.state._token === '' ? <p align='center' style={{color: '#139bd1', fontSize: '26px'}}>Welcome! <br /> Please log into Spotify to get started.</p> : null}\r\n\r\n        {(searchResults.length !== 0) ? \r\n          <SongSection\r\n          title='Search Results'\r\n          song_info={searchResults}\r\n          expand={this.expandSection}\r\n        /> : null\r\n        }\r\n\r\n        {(recents.length !== 0) ?\r\n        <SongSection\r\n          title='Recent Songs'\r\n          song_info={recents}\r\n        /> : null\r\n        }\r\n\r\n        {(top.length !== 0) ?\r\n        <SongSection\r\n          title='Your Top Picks'\r\n          song_info={top}\r\n        /> : null\r\n        }\r\n        \r\n        {(newAlbums.length !== 0) ?\r\n        <SongSection\r\n          title='New Releases'\r\n          song_info={newAlbums}\r\n        /> : null\r\n        }\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass SongSection extends Component {\r\n  render() {\r\n    const {title, song_info} = this.props\r\n\r\n    return (\r\n      <div>\r\n        <br/>\r\n          <Container fluid>\r\n            <Header as='h2' textAlign='center'>{title}</Header>\r\n            <Divider/>\r\n            <SongGrid song_info={song_info}/>\r\n            <Divider hidden/>\r\n            <Divider hidden/>\r\n          </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Discover)\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBMD75FP14e3VvxTRllOrc26K9vds7WHBs\",\r\n  authDomain: \"runtime-terror-web.firebaseapp.com\",\r\n  databaseURL: \"https://runtime-terror-web.firebaseio.com\",\r\n  projectId: \"runtime-terror-web\",\r\n  storageBucket: \"runtime-terror-web.appspot.com\",\r\n  messagingSenderId: \"714361214200\",\r\n  appId: \"1:714361214200:web:81690bccecf7b7ce18570d\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import firebase from '../../config/fbConfig'\r\n\r\n\r\nexport const signIn = (credentials) => {\r\n  return (dispatch, getState) => {\r\n\r\n    // Make async call to database\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n        dispatch({type: 'LOGIN_SUCCESS'})\r\n    }).catch((err) => {\r\n        dispatch({type: 'LOGIN_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirestore}) => {\r\n\r\n    const firestore = getFirestore()\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      firestore.collection('users').doc(resp.user.uid).set({\r\n        name: newUser.name,\r\n        friends: [],\r\n        friends_pending: [],\r\n        privacy: 'public',\r\n        spotify_token: '',\r\n        imageUrl: 'https://firebasestorage.googleapis.com/v0/b/runtime-terror-1d144.appspot.com/o/profile_images%2Fdefault_pic.png?alt=media&token=74c12ae4-d4ca-4ad2-af25-c38c2206ee43'\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err})\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState) => {\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'})\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateImage = (uId, imageUrl) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    firestore.collection('users').doc(uId).update({\r\n      imageUrl: imageUrl\r\n    }).then(() => {\r\n      dispatch({ type: 'USER_IMAGE', uId, imageUrl })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'USER_IMAGE_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateProfile = (uId, newInfo) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n    const {name, privacy} = newInfo\r\n\r\n    firestore.collection('users').doc(uId).update({\r\n      name: name,\r\n      privacy: privacy\r\n    }).then(() => {\r\n      dispatch({ type: 'USER_UPDATE', uId, newInfo })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'USER_UPDATE_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const addFriend = (profile_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    firestore.collection('users').doc(profile_user_id).update({\r\n      friends_pending: firestore.FieldValue.arrayUnion(logged_in_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'SEND_FRIEND_REQUEST', profile_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SEND_FRIEND_REQUEST_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const removeFriend = (profile_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    // Remove logged in user from profile user's friends list\r\n    firestore.collection('users').doc(profile_user_id).update({\r\n      friends: firestore.FieldValue.arrayRemove(logged_in_user_id)\r\n    })\r\n    \r\n    // Remove profile user from logged in user's friends list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends: firestore.FieldValue.arrayRemove(profile_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'REMOVE_FRIEND', profile_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'REMOVE_FRIEND_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const acceptFriend = (friend_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    // Remove incoming friend from logged in user's friends_pending list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends_pending: firestore.FieldValue.arrayRemove(friend_user_id)\r\n    })\r\n    \r\n    // Add incoming friend to logged in user's friends list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends: firestore.FieldValue.arrayUnion(friend_user_id)\r\n    })\r\n\r\n    // Add logged in user to incoming friend's friends list\r\n    firestore.collection('users').doc(friend_user_id).update({\r\n      friends: firestore.FieldValue.arrayUnion(logged_in_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'ACCEPT_FRIEND', friend_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'ACCEPT_FRIEND_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const rejectFriend = (friend_user_id, logged_in_user_id) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    // Remove incoming friend from logged in user's friends_pending list\r\n    firestore.collection('users').doc(logged_in_user_id).update({\r\n      friends_pending: firestore.FieldValue.arrayRemove(friend_user_id)\r\n    }).then(() => {\r\n      dispatch({ type: 'REJECT_FRIEND', friend_user_id, logged_in_user_id})\r\n    }).catch((err) => {\r\n      dispatch({ type: 'REJECT_FRIEND_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateToken = (uId, token, callback) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n\r\n    firestore.collection('users').doc(uId).update({\r\n      spotify_token: token\r\n    }).then(() => {\r\n      dispatch({ type: 'SPOTIFY_TOKEN', uId })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SPOTIFY_TOKEN_ERROR', err })\r\n    })\r\n\r\n    callback();\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Loader } from 'semantic-ui-react'\r\nimport { updateToken } from '../../store/actions/authActions'\r\n\r\n\r\nexport class TokenHandler extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    this.state = {\r\n      token: token ? token : ''\r\n    }\r\n  }\r\n\r\n  getHashParams() {\r\n    let hashParams = {};\r\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleToken()\r\n  }\r\n\r\n  handleToken() {\r\n    if (this.props.auth && !this.props.auth.isEmpty && this.state.token !== '') {\r\n      this.props.updateToken(this.props.auth.uid, this.state.token, () => \r\n        this.props.history.push(\"/discover\")\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='fullsize_div'> \r\n        <Loader active size='massive'>Redirecting...</Loader> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateToken: (uId, token, callback) => dispatch(updateToken(uId, token, callback))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenHandler)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, ButtonContent, Icon } from 'semantic-ui-react'\r\nimport { signUp } from '../../../store/actions/authActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        name: ''\r\n    }\r\n\r\n    submit = () => {\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authError } = this.props\r\n        return (\r\n            <Form onSubmit={this.submit}>\r\n                <Form.Field>\r\n                    <Form.Input label='Email' id='email' placeholder='Enter your email' onChange={this.change}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <Form.Input label='Password' id='password' placeholder='Enter your password' type='password' onChange={this.change}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <Form.Input label='Name' id='name' placeholder='Enter your name' onChange={this.change}/>\r\n                </Form.Field>\r\n                {authError ? <p style={{color: 'red'}}>{authError}</p> : null}\r\n                <Form.Field control={Button}>\r\n                    <ButtonContent>\r\n                        <Icon name='headphones'/>\r\n                        Sign Up\r\n                    </ButtonContent>\r\n                </Form.Field>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      authError: state.auth.authError\r\n    }\r\n  }\r\n  \r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n  \r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, ButtonContent, Icon } from 'semantic-ui-react'\r\nimport { signIn } from '../../../store/actions/authActions'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    submit = () => {\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authError } = this.props\r\n        return (\r\n            <Form onSubmit={this.submit}>\r\n                <Form.Field>\r\n                    <Form.Input label='Email' id='email' placeholder='Enter your email' onChange={this.change}/>\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <Form.Input label='Password' id='password' placeholder='Enter your password' type='password' onChange={this.change}/>\r\n                </Form.Field>\r\n                {authError ? <p style={{color: 'red'}}>{authError}</p> : null}\r\n                <Form.Field control={Button} fluid>\r\n                    <ButtonContent>\r\n                        <Icon name='headphones'/>\r\n                        Sign In\r\n                    </ButtonContent>\r\n                </Form.Field>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Button, ButtonContent, Icon, Segment } from 'semantic-ui-react'\r\nimport SignUp from './signup'\r\nimport SignIn from './signin'\r\n\r\n\r\n// TODO: A lot of code overlap with SignUp/SignIn. Refactor into one class\r\nclass LoginForm extends Component {\r\n    state = {\r\n        signing_up: false\r\n    }\r\n\r\n    sign_up = (word) => {\r\n        this.setState( {signing_up: word})\r\n    }\r\n\r\n    render() {\r\n        const signing_area = this.state.signing_up ? <SignUp/> : <SignIn/>\r\n        return (\r\n            <div>\r\n                <Button.Group>\r\n                    <Button color='yellow' onClick={() => {this.sign_up(true)}}>\r\n                        <ButtonContent>\r\n                            <Icon name='plus'/>\r\n                            Sign Up\r\n                        </ButtonContent>\r\n                    </Button>\r\n                    <Button.Or/>\r\n                    <Button color='yellow' onClick={() => {this.sign_up(false)}}>\r\n                        <ButtonContent>\r\n                        <Icon name='music'/>\r\n                            Sign In\r\n                        </ButtonContent>\r\n                    </Button>\r\n                </Button.Group>\r\n                <Segment>\r\n                    {signing_area}\r\n                </Segment>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default LoginForm\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Image, Grid, GridRow } from 'semantic-ui-react'\r\nimport LoginForm from './loginForm'\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (auth.isLoaded && auth.uid) {\r\n            return <Redirect to='/'/>\r\n        }\r\n        else {\r\n            return (\r\n                <Grid padded centered>\r\n                    <Image src=\"img/silhouette_2.png\"/>\r\n                    <GridRow> <LoginForm/> </GridRow>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(mapStateToProps)(Login)\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Feed, Divider } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst PostSummary = ({post, users}) => {\r\n  const user = users && post ? users.filter(user => user.id === post.authorId)[0] : null\r\n\r\n  const summary = \r\n    <div>\r\n      <Link to={'/profile/' + post.authorId}> {post.author} </Link>\r\n      rated song <b><a href={post.url ? post.url : null}> {post.song} </a></b>\r\n      <span className={\"fa fa-star \" + (post.rating >= 1 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 2 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 3 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 4 ? 'star_checked' : '')}></span>\r\n      <span className={\"fa fa-star \" + (post.rating >= 5 ? 'star_checked' : '')}></span> \r\n    </div>\r\n  \r\n\r\n  return (\r\n\r\n    user && post ?\r\n    <div>\r\n      <Feed size='large'>\r\n        <Feed.Event\r\n          image={user.imageUrl}\r\n          date={moment(post.createdAt.toDate()).format('LLLL')}\r\n          summary={summary}\r\n          extraText={post.comment}\r\n        />\r\n      </Feed>\r\n      <Divider />\r\n    </div> : null\r\n  )\r\n}\r\n\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport PostSummary from './postSummary';\r\n\r\n\r\nconst PostList = ({posts, users}) => {\r\n  return (\r\n    <div>\r\n        {(posts && (posts.length === 0)) ? <h3>No Posts Yet!</h3> : null}\r\n        { posts && posts.map(post => {\r\n          return (\r\n            <PostSummary key={post.id} post={post} users={users} />\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PostList;","import React, { Component } from 'react'\r\nimport { Tab, Divider } from 'semantic-ui-react'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport PostList from './postList'\r\n\r\nexport class Feed extends Component {\r\n  state = {\r\n    friendsPosts: null,\r\n    explorePosts: null,\r\n    users: null,\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let newPosts = {}\r\n    if (nextProps.explorePosts !== prevState.explorePosts) {\r\n      Object.assign(newPosts, {explorePosts: nextProps.explorePosts})\r\n    }\r\n    if (nextProps.friendsPosts !== undefined && nextProps.friendsPosts !== prevState.friendsPosts) {\r\n      Object.assign(newPosts, {friendsPosts: nextProps.friendsPosts})\r\n    }\r\n    if (nextProps.users !== undefined && nextProps.users !== prevState.users) {\r\n      Object.assign(newPosts, {users: nextProps.users})\r\n    }\r\n    return (newPosts.length !== 0) ? newPosts : null;\r\n  }\r\n\r\n  render() {\r\n    let feedPanes = [\r\n      { menuItem: 'Friends', render: () => <Tab.Pane><PostList posts={this.state.friendsPosts} users={this.state.users}/></Tab.Pane> },\r\n      { menuItem: 'Explore', render: () => <Tab.Pane><PostList posts={this.state.explorePosts} users={this.state.users}/></Tab.Pane> },\r\n    ]\r\n  \r\n    return (\r\n      <div>\r\n        <Divider hidden />\r\n        <Tab panes={feedPanes}/> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //creates the friends list for us to query\r\n  var currentFriendsList = [\"0\"]; //This is the dummy value\r\n  for(var key in state.firestore.ordered.users)\r\n  {\r\n    if(state.firebase.auth[\"uid\"] === state.firestore.ordered.users[key][\"id\"])\r\n    {\r\n      currentFriendsList = state.firestore.ordered.users[key][\"friends\"];\r\n    }\r\n  }\r\n\r\n  //sort friendsPosts, because the sortBy doesn't work\r\n  if(state.firestore.ordered.friendsPosts != null){\r\n  var sortedFriendsArray = state.firestore.ordered.friendsPosts.sort(function (a, b) {\r\n    return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];\r\n  })\r\n  }\r\n\r\n  //This is if we wanted to allow personal private posts to be shown on explore page\r\n  //find a way to combine publicPosts and privatePersonalPosts for the explore page \r\n  // if(state.firestore.ordered.publicPosts != null && state.firestore.ordered.privatePersonalPosts != null){\r\n  // var sortedExploreArray = state.firestore.ordered.publicPosts.concat(state.firestore.ordered.privatePersonalPosts)\r\n  //                                                   .sort(function (a, b) {\r\n  //   return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];\r\n  // })\r\n  // }\r\n  if(state.firestore.ordered.publicPosts)\r\n    var sortedExploreArray = state.firestore.ordered.publicPosts.sort(function (a, b) {return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];})\r\n\r\n  return {\r\n    explorePosts: sortedExploreArray,\r\n    friendsPosts: sortedFriendsArray,\r\n    auth: state.firebase.auth,\r\n    users: state.firestore.ordered.users,\r\n    currentFriendsList: currentFriendsList\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => [\r\n      { collection: 'users' },\r\n      {\r\n        collection: 'posts',\r\n        storeAs: 'friendsPosts',\r\n        where: ['authorId', 'in', props.currentFriendsList === null || props.currentFriendsList.length === 0 ? ['0'] : props.currentFriendsList]\r\n      },\r\n      { \r\n        collection: 'posts',\r\n        storeAs: 'publicPosts',\r\n        where: ['privacy', '==', 'public'],\r\n      },\r\n      // {\r\n      //   collection: 'posts',\r\n      //   storeAs: 'privatePersonalPosts',\r\n      //   where: [\r\n      //     ['authorId', '==', props.auth[\"uid\"]\r\n      //   ],\r\n      //     ['privacy', '==', 'private']\r\n      //   ]\r\n      // },\r\n  ])\r\n)(Feed);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createPost } from '../store/actions/postActions'\r\nimport { Form, Radio, Header, Container, Divider } from 'semantic-ui-react'\r\n\r\n// Semantic-UI\r\n// https://react.semantic-ui.com/\r\n// https://medium.com/@a.carreras.c/using-semantic-ui-react-your-react-js-app-523ddc9abeb3\r\n\r\n\r\nexport class CreatePost extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    const params = this.getHashParams();\r\n    const songName = params.SongName;\r\n    const songUrl = params.SongUrl;\r\n    \r\n    this.state = {\r\n      song: songName ? songName : '',\r\n      comment: '',\r\n      rating: '',\r\n      url: songUrl ? songUrl : '',\r\n      privacy: props.profile.privacy,\r\n      error: false,\r\n    }\r\n  }\r\n  \r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.profile && nextProps.profile.isLoaded && nextProps.profile.privacy !== undefined && prevState.privacy === undefined) {\r\n      return {\r\n        privacy: nextProps.profile.privacy\r\n      }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n        q = window.location.hash.substring(1);\r\n    e = r.exec(q)\r\n    while (e) {\r\n       hashParams[e[1]] = decodeURIComponent(e[2]);\r\n       e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleRating = (e, {value}) => {\r\n    this.setState({\r\n      'rating': value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (this.state.rating) {\r\n      this.props.createPost({\r\n        song: this.state.song,\r\n        comment: this.state.comment,\r\n        rating: this.state.rating,\r\n        privacy: this.state.privacy,\r\n        url: this.state.url\r\n      })\r\n      this.props.history.push('/')\r\n    }\r\n    else {\r\n        this.setState({ error: 'Rating is required!' })\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      privacy: (this.state.privacy === 'private') ? 'public' : 'private',\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Container text>\r\n        <Divider hidden />\r\n        <Header as='h2'>Create Post</Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group widths='equal'>\r\n            <Form.Input\r\n              id='song'\r\n              label='Song'\r\n              name='Song'\r\n              required={this.state.song ? false : true}\r\n              readOnly={this.state.url ? true : false}\r\n              placeholder={this.state.song}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Form.Input\r\n              id='url'\r\n              label='URL'\r\n              name='URL'\r\n              readOnly\r\n              disabled={this.state.url ? false : true}\r\n              placeholder={this.state.url}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n              control={Radio}\r\n              toggle\r\n              label={this.state.privacy === 'private' ? 'This post will be Private' : 'This post will be Public'}\r\n              defaultChecked={this.state.privacy === 'private'}\r\n              onClick={this.toggle}\r\n            />\r\n          <Form.Dropdown\r\n            id='rating'\r\n            label='Rating'\r\n            placeholder='Select'\r\n            required\r\n            inline\r\n            error={this.state.error}\r\n            onChange={this.handleRating}\r\n            options={\r\n              [\r\n                {text: '1', value: 1},\r\n                {text: '2', value: 2},\r\n                {text: '3', value: 3},\r\n                {text: '4', value: 4},\r\n                {text: '5', value: 5}\r\n              ]\r\n            }\r\n          />\r\n\r\n          <Form.TextArea\r\n            id='comment'\r\n            label='Comment'\r\n            name='Comment'\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Button type='submit' color='green'>Create Post</Form.Button>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n \r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      profile: state.firebase.profile\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createPost: (Post) => dispatch(createPost(Post))\r\n  }\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(CreatePost);\r\n","export const createPost = (post) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n    // Make async call to database\r\n    const firestore = getFirestore()\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n\r\n    firestore.collection('posts').add({\r\n      ...post, \r\n      author: profile.name,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_POST', post: post })\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_POST_ERROR', err: err })\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Feed, Divider } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst FriendList = ({friends, users}) => {\r\n  return (\r\n    <div>\r\n        {(friends && friends.length === 0) ? <h3>No Friends Yet :(</h3> : null }\r\n        { friends && users && friends.map(friend => {\r\n          const friend_info = users.filter(user => user.id === friend)[0]\r\n          const summary = friend_info ? <Link to={'/profile/' + friend}> {friend_info.name} </Link> : null\r\n          return (\r\n            <Feed key={friend}>\r\n              <Feed.Event\r\n                image={friend_info ? friend_info.imageUrl : null}\r\n                summary={summary}\r\n              />\r\n              <Divider fitted/>\r\n            </Feed>\r\n          )\r\n        })}\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default FriendList;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport firebase from 'firebase';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport { updateImage } from '../../store/actions/authActions'\r\nimport { Grid, Progress, Header, Image, Button, Modal } from 'semantic-ui-react';\r\n\r\n\r\nclass ModalUploadPicture extends Component {\r\n\r\n  constructor(uId) {\r\n    super()\r\n    this.uId = uId.uId\r\n  }\r\n\r\n  state = {\r\n    image: '',\r\n    isUploading: false,\r\n    progress: 0,\r\n    imageURL: '',\r\n    open: false\r\n  };\r\n\r\n  handleUploadStart = () => {\r\n    this.setState({isUploading: true, progress: 0, imageURL: null, image: null})\r\n  }\r\n  handleProgress = (progress) => this.setState({progress});\r\n  \r\n  handleUploadError = (error) => {\r\n    this.setState({isUploading: false})\r\n    console.error(error);\r\n  }\r\n \r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({image: filename, progress: 100, isUploading: false});\r\n    firebase.storage().ref('profile_images').child(filename).getDownloadURL().then(url => {\r\n        this.setState({imageURL: url})\r\n        this.props.updateImage(this.uId, url)\r\n        this.handleModalClose()\r\n    });\r\n  }\r\n\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      image: '',\r\n      isUploading: false,\r\n      progress: 0,\r\n      imageURL: '',\r\n      open: false\r\n    })\r\n  }\r\n    \r\n  render() {\r\n    const previousImageUrl = this.props.previousImageUrl\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Image src={previousImageUrl} size='medium' circular bordered/>}\r\n        open={this.state.open}\r\n        onOpen={() => this.setState({open: true})}\r\n        closeOnDimmerClick={false}\r\n        closeOnDocumentClick={false}\r\n        size='small'\r\n      >\r\n        <Modal.Content>                \r\n          <Grid divided stretched centered>\r\n            <Grid.Row stretched>\r\n              <Grid.Column stretched>\r\n                <Header as='h2'>Current</Header>\r\n                <Image src={previousImageUrl} wrapped size='medium' href={previousImageUrl} bordered/>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row stretched>\r\n              <Grid.Column stretched>\r\n              <Grid stretched columns={16}>\r\n                <Grid.Row>\r\n                <Grid.Column width={6}>\r\n                  <FileUploader\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    filename={ this.uId }\r\n                    storageRef={firebase.storage().ref('profile_images')}\r\n                    onUploadStart={this.handleUploadStart}\r\n                    onUploadError={this.handleUploadError}\r\n                    onUploadSuccess={this.handleUploadSuccess}\r\n                    onProgress={this.handleProgress}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={10}>\r\n                    {\r\n\r\n                      (this.state.imageURL) ? <Progress percent={100} success>Uploaded</Progress> :\r\n                        this.state.isUploading ?\r\n                          <Progress percent={this.state.progress} progress color='blue'/> :\r\n                          null\r\n                    }\r\n                  </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color='red' onClick={() => {this.setState({open: false})}}>Cancel</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateImage: (uId, imageUrl) => dispatch(updateImage(uId, imageUrl))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ModalUploadPicture)\r\n","import React, { Component } from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Grid, GridRow, Image, Button, Segment, Tab, GridColumn, Label, Modal, Form } from 'semantic-ui-react'\r\nimport { addFriend, removeFriend, acceptFriend } from '../../store/actions/authActions'\r\nimport CreatePost from '../createPost';\r\nimport PostList from '../feed/postList'\r\nimport FriendList from './friendList'\r\nimport UploadPicture from './modalUploadPicture';\r\nimport { updateProfile } from '../../store/actions/authActions'\r\n\r\nexport class Profile extends Component {\r\n\r\n  state = {\r\n    posts_content: null,\r\n    friends_content: null,\r\n    navigate: null,\r\n    open: false,\r\n    name: '',\r\n    privacy: null,\r\n    profile: null\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let data = {}\r\n    if ((prevState.profile === null || prevState.profile.isLoading) && nextProps.profile) {\r\n      if (nextProps.profile.privacy !== undefined) {\r\n        Object.assign(data,\r\n          {\r\n            privacy: nextProps.profile.privacy,\r\n            profile: nextProps.profile\r\n          }\r\n        )\r\n      }\r\n\r\n      if (nextProps.profile.name !== undefined) {\r\n        Object.assign(data,\r\n          {\r\n            name: nextProps.profile.name\r\n          }\r\n        )\r\n      }\r\n    }\r\n    return data\r\n  }\r\n\r\n  navigate = (destination) => {\r\n    this.setState({\r\n      navigate: destination\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    this.handleSubmitPrivacy(e, this.state.privacy)\r\n  }\r\n\r\n  handleSubmitPrivacy = (e, privacy) => {\r\n    e.preventDefault()\r\n    this.props.updateProfile(this.props.auth.uid, {name: this.state.name, privacy: privacy, profile: this.state.profile})\r\n    this.props.history.push('/profile/' + this.props.auth.uid)\r\n    this.setState({open: false})\r\n  }\r\n\r\n  togglePrivacy = (e) => {\r\n    let new_privacy = (this.state.privacy === 'private') ? 'public' : 'private'\r\n    this.setState({\r\n      privacy: new_privacy\r\n    })\r\n    this.handleSubmitPrivacy(e, new_privacy)\r\n  }\r\n\r\n  render() {\r\n    const { auth, users, profile, match, curProfilePosts, currentFriendsList} = this.props;\r\n    const curProfileUser = users && auth ? users.filter(user => user.id === match.params.id)[0] : null\r\n    const imageUrl = curProfileUser ? curProfileUser.imageUrl : null\r\n    \r\n    const isUser = auth.uid && match.params && auth.uid === match.params.id;\r\n\r\n    let friendButton = match && auth ? <Button onClick={() => {this.props.addFriend(match.params.id, auth.uid)}}>Add Friend</Button> : null\r\n    if (auth && curProfileUser && curProfileUser.friends_pending && curProfileUser.friends_pending.includes(auth.uid))\r\n      friendButton = <Button>Friend Request Sent</Button>\r\n    else if (auth && curProfileUser && curProfileUser.friends.includes(auth.uid) && match)\r\n      friendButton = <Button onClick={() => {this.props.removeFriend(match.params.id, auth.uid)}}>Remove Friend</Button>\r\n    else if (profile && profile.friends_pending && auth && match && profile.friends_pending.includes(match.params.id))\r\n      friendButton = <Button onClick={() => {this.props.acceptFriend(match.params.id, auth.uid)}}>Accept Friend Request</Button>\r\n    \r\n      \r\n    let posts_content = <div> <PostList posts={curProfilePosts} users={users} /> </div>\r\n    let friends_content = curProfileUser ? \r\n          ((currentFriendsList && match && match.params && match.params.id && currentFriendsList.includes(match.params.id)) \r\n            || (auth && match && match.params && match.params.id && auth[\"uid\"] === match.params.id) ? \r\n            <div> <FriendList users={users} friends={curProfileUser.friends} /> </div> :\r\n            <div> <FriendList users={users} friends={[]} /> </div>)\r\n             : null\r\n\r\n    let profile_panes = [\r\n    {\r\n      menuItem: 'Posts',\r\n      render: () => <Tab.Pane>{posts_content}</Tab.Pane>\r\n    },\r\n    {\r\n      menuItem: 'Friends',\r\n      render: () => <Tab.Pane>{friends_content}</Tab.Pane>\r\n    }\r\n  ]\r\n\r\n    if (this.state.navigate === '/createpost') {\r\n      return (\r\n        <div><Redirect to={this.state.navigate}/><CreatePost/></div>\r\n      )\r\n    }\r\n\r\n    \r\n    return (\r\n      <div>\r\n        <Grid centered padded='vertically'>\r\n          <GridRow>\r\n            <Segment>\r\n              { isUser ?\r\n                <UploadPicture uId={auth.uid} previousImageUrl={imageUrl} /> :\r\n                <Image src={imageUrl} size='medium' circular bordered/>\r\n              }\r\n              <br/>\r\n              <Button as='div' labelPosition='left'>\r\n                <Label basic>\r\n                  {curProfileUser ? curProfileUser.name : null }\r\n                </Label>\r\n                { isUser ?\r\n                <Modal\r\n                  trigger={<Button compact icon='edit'/>}\r\n                  open={this.state.open}\r\n                  onOpen={() => this.setState({open: true})}\r\n                  closeOnDimmerClick={false}\r\n                  closeOnDocumentClick={false}\r\n                  size='small'\r\n                  >\r\n                    <Modal.Content>\r\n                      <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Field>\r\n                          <label>New Name</label>\r\n                          <Form.Input id='name' onChange={this.handleChange} placeholder={curProfileUser ? curProfileUser.name : ''}/>\r\n                        </Form.Field>\r\n                        <Button type='submit' color='green'>Change name</Button>\r\n                        <Button floated='right' color='red'  onClick={() => this.setState({open: false})}>Cancel</Button>\r\n                      </Form>\r\n                    </Modal.Content>\r\n                  </Modal>\r\n                : null\r\n                }\r\n              </Button>\r\n\r\n              { isUser ?  // If the current profile is logged in user's profile\r\n                <div>\r\n                  <Grid>\r\n                    <Grid.Column floated='left'>\r\n                      <Button onClick={this.togglePrivacy} basic size='small' color={(this.state.privacy === 'private') ? 'red' : 'green'}>{(this.state.privacy === 'private') ? 'Private' : 'Public'}</Button>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated='right'>\r\n                      <Button floated='right' icon='plus' onClick={() => {this.navigate('/createpost')}}/>\r\n                    </Grid.Column>\r\n                  </Grid>\r\n                </div> :\r\n                  friendButton\r\n              }\r\n            </Segment>\r\n          </GridRow>\r\n          <GridRow> <GridColumn width={16}> <Tab panes={profile_panes}/> </GridColumn> </GridRow>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.navigate != null)\r\n      this.navigate(null)\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    //creates the friends list for the current user\r\n    let currentFriendsList = [\"0\"]; //This is the dummy value\r\n    for(let key in state.firestore.ordered.users)\r\n    {\r\n      if(state.firebase.auth[\"uid\"] === state.firestore.ordered.users[key][\"id\"])\r\n      {\r\n        currentFriendsList = state.firestore.ordered.users[key][\"friends\"];\r\n      }\r\n    }\r\n    \r\n    //This creates the posts on the profile that we are looking at\r\n    let curProfilePosts = [];\r\n    if(state.firestore.ordered.curPrivatePosts != null && state.firestore.ordered.curPublicPosts != null){\r\n      curProfilePosts = state.firestore.ordered.curPrivatePosts.concat(state.firestore.ordered.curPublicPosts).sort(function (a, b) {\r\n        return b.createdAt[\"seconds\"] - a.createdAt[\"seconds\"];\r\n    })\r\n    }\r\n    else if(state.firestore.ordered.curPublicPosts != null){\r\n      curProfilePosts = state.firestore.ordered.publicPosts;\r\n    }\r\n    else if(state.firestore.ordered.curPrivatePosts != null){\r\n      curProfilePosts = state.firestore.ordered.curPrivatePosts;\r\n    }\r\n\r\n  return {\r\n    curProfilePosts: curProfilePosts,\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n    users: state.firestore.ordered.users,\r\n    currentFriendsList: currentFriendsList\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFriend: (profile_user_id, logged_in_user_id) => dispatch(addFriend(profile_user_id, logged_in_user_id)),\r\n    removeFriend: (profile_user_id, logged_in_user_id) => dispatch(removeFriend(profile_user_id, logged_in_user_id)),\r\n    acceptFriend: (friend_user_id, logged_in_user_id) => dispatch(acceptFriend(friend_user_id, logged_in_user_id)),\r\n    updateProfile: (uId, newInfo) => dispatch(updateProfile(uId, newInfo))\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect(props => [\r\n    { collection: 'users' },\r\n      { \r\n      collection: 'posts',\r\n      storeAs: 'curPrivatePosts',\r\n      where: [\r\n        ['authorId', '==', props.match.params.id],\r\n        [\r\n        'privacy', '==', \r\n        //get the private posts if they are friends OR they are the current user\r\n        //Otherwise we can only see their public posts\r\n        props.currentFriendsList === null || (props.match.params.id !== props.auth[\"uid\"] && !props.currentFriendsList.includes(props.match.params.id))?\r\n        '0':'private'\r\n        ],\r\n      ],\r\n     },\r\n     { \r\n      collection: 'posts',\r\n      storeAs: 'curPublicPosts',\r\n      where: [\r\n      //Alway just get the public posts, and we will add them together and sort them by their start time\r\n        ['authorId', '==', props.match.params.id],\r\n        ['privacy', '==','public'],\r\n      ],\r\n     },\r\n      \r\n  ])\r\n)(Profile);\r\n","import React, { Component } from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Divider, Container, List, Image, Icon } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { acceptFriend, rejectFriend } from '../../store/actions/authActions'\r\n\r\n\r\nexport class PendingList extends Component {\r\n\r\n  render() {\r\n\r\n    const { auth, users, profile, acceptFriend, rejectFriend } = this.props\r\n    const friend_requests = profile ? profile.friends_pending : null\r\n\r\n    return (\r\n      <div>\r\n        <Container text>\r\n          <Divider hidden />\r\n          {(friend_requests && friend_requests.length === 0) ? <h3>No Friends Requests</h3> : null }\r\n          { friend_requests && users && friend_requests.map(friend => {\r\n            const user_info = users.filter(user => user.id === friend)[0]\r\n            const summary = user_info ? <Link to={'/profile/' + friend}> {user_info.name} </Link> : null\r\n            \r\n            return (\r\n              <List divided animated relaxed verticalAlign='middle' size='big' key={friend}>\r\n                <List.Item>\r\n                  <Image avatar src={user_info ? user_info.imageUrl : null} />\r\n                  <List.Content> <List.Header>{summary}</List.Header> </List.Content>\r\n                  <List.Content floated='right'>\r\n                    <List.Description as='a' onClick={() => acceptFriend(friend, auth.uid)}>\r\n                      <Icon name='check' color='green'/>Accept\r\n                    </List.Description>\r\n                    <List.Description as='a' onClick={() => rejectFriend(friend, auth.uid)}>\r\n                      <Icon name='close' color='red'/>Reject\r\n                    </List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n                <Divider/>\r\n              </List>\r\n            )\r\n          })}\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n    users: state.firestore.ordered.users\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    acceptFriend: (friend_user_id, logged_in_user_id) => dispatch(acceptFriend(friend_user_id, logged_in_user_id)),\r\n    rejectFriend: (friend_user_id, logged_in_user_id) => dispatch(rejectFriend(friend_user_id, logged_in_user_id))\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: 'users' }])\r\n)(PendingList)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Sidebar, Menu, Segment, Label, Image } from 'semantic-ui-react'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\nclass SideNavbar extends Component {\r\n    LOGIN = 'LOGIN'\r\n    PROFILE = 'PROFILE'\r\n    DISCOVER = 'DISCOVER'\r\n    FEED = 'FEED'\r\n    REQUESTS = 'REQUESTS'\r\n    \r\n    state = {\r\n        redirect_target: null,\r\n        targets: {\r\n            FEED: '/',\r\n            LOGIN: '/login',\r\n            PROFILE: ('/profile/' + this.props.auth.uid),\r\n            DISCOVER: '/discover',\r\n            REQUESTS: '/requests'\r\n        },\r\n        visible: false,\r\n    }\r\n   \r\n    load = (target) => {\r\n        this.setState({\r\n            redirect_target: target,\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { profile } = this.props;\r\n        let imageTop = profile ? <Image circular centered size='mini' src={profile.imageUrl} alt=\"\"/> : null\r\n        let imageBot = profile ? <Image circular centered size='small' src={profile.imageUrl} alt=\"\"/> : null\r\n        let requests_num = profile && profile.friends_pending ? profile.friends_pending.length : 0\r\n        const requests = (requests_num > 0) ? \r\n            <Menu.Item onClick={() => {this.load(this.REQUESTS)}}>Friend Requests:\r\n                <Label color='teal'>{requests_num} </Label>\r\n            </Menu.Item> : null\r\n\r\n\r\n        const output = (\r\n            <div className='fullsize_div' id='sidebar_2'>\r\n                <Menu fixed='top' className='top_menu'>\r\n                    <Menu.Item icon='th list' onClick={() => {this.setState({visible: !this.state.visible})}}/>\r\n                    <Menu.Item header onClick={() => {this.load(this.FEED)}}>Runtime Terror</Menu.Item>\r\n                    <Menu.Item onClick={() => {this.load(this.PROFILE)}}>{imageTop}</Menu.Item>\r\n                    {requests}\r\n                </Menu>\r\n                <div id='sidebar'>\r\n                <Sidebar.Pushable as={Segment}>\r\n                    <Sidebar as={Menu} animation={'slide along'} direction={'left'} icon='labeled' inverted vertical visible={this.state.visible} onHide={()=>this.setState({visible: false})} width='thin'>\r\n                        <Menu.Item onClick={() => {this.load(this.PROFILE)}} name='Profile'><br/>{imageBot}<br/>Profile</Menu.Item>,\r\n                        <Menu.Item onClick={() => {this.load(this.DISCOVER)}} icon='map' name='Discover'/>,\r\n                        <Menu.Item onClick={() => {this.load(this.FEED)}} icon='sitemap' name='Feed'/>,\r\n                        <Menu.Item onClick={this.props.signOut} name='Sign out' icon='sign out' position='right'/>\r\n                    </Sidebar>\r\n                    <Sidebar.Pusher dimmed={this.state.visible}>\r\n                            {this.props.content}\r\n                    </Sidebar.Pusher>\r\n                </Sidebar.Pushable>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.redirect_target != null) {\r\n            let to_link = this.state.targets[this.state.redirect_target]\r\n            return (<div className='fullsize_div'><Redirect to={to_link}/>{output}</div>)\r\n        }\r\n        else {            \r\n            return output\r\n        }\r\n    }\r\n\r\n    // Clear redirect_target after render\r\n    componentDidUpdate() {\r\n        if (this.state.redirect_target != null) {\r\n            this.setState({\r\n                redirect_target: null\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n  \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavbar)","import React, { Component } from 'react'\r\n\r\nexport class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>404: Page not found</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Menu, Loader } from 'semantic-ui-react';\r\nimport Discover from './components/discover/discover'\r\nimport TokenHandler from './components/discover/tokenHandler'\r\nimport Login from './components/layout/login/login'\r\nimport Feed from './components/feed/feed'\r\nimport Profile from './components/profile/profile'\r\nimport PendingList from './components/profile/pendingList'\r\nimport SideNavbar from './components/layout/sideNavbar';\r\nimport CreatePost from './components/createPost'\r\nimport NotFound from './components/404'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = { isLoading: true }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.auth.isLoaded && (nextProps.auth.isEmpty || nextProps.auth.uid)) {\r\n      return { isLoading: false }\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { auth } = this.props\r\n    const content = (\r\n      <Switch>\r\n        <Route exact path='/'           component={Feed} />\r\n        <Route path='/login'            component={Login} />\r\n        <Route path='/discover'         component={Discover} />\r\n        <Route path='/tokenHandler'     component={TokenHandler} />\r\n        <Route path='/profile/:id'      component={Profile} />\r\n        <Route path='/createpost'       component={CreatePost} />\r\n        <Route path='/requests'         component={PendingList} />\r\n        <Route                          component={NotFound} />\r\n      </Switch>\r\n    )\r\n\r\n    // Redirect forces user to load at Discover page if already logged in\r\n    const showLogin = (auth.isLoaded && auth.uid) ? \r\n      <SideNavbar content={content}/> : \r\n      <div><Redirect to='/'/><Menu><Menu.Item header>Runtime Terror</Menu.Item></Menu><Login/></div>\r\n\r\n    return (\r\n      this.state.isLoading ? <div className='fullsize_div'> <Loader active size='massive'>Loading</Loader> </div>:\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          { showLogin }\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nconst initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  \r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error')\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed!'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success')\r\n      return state\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    case 'USER_IMAGE': \r\n      console.log('Updated user image', action.uId, action.imageUrl)\r\n      return state\r\n\r\n    case 'USER_IMAGE_ERROR': \r\n      console.log('Update user image error', action.err)\r\n      return state\r\n\r\n    case 'USER_UPDATE': \r\n      console.log('Updated user profile', action.uId, action.newInfo)\r\n      return state\r\n\r\n    case 'USER_UPDATE_ERROR': \r\n      console.log('Update user profile error', action.err)\r\n      return state\r\n\r\n    case 'SEND_FRIEND_REQUEST': \r\n      console.log('Sent friend request', action.profile_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'SEND_FRIEND_REQUEST_ERROR': \r\n      console.log('Send friend request error', action.err)\r\n      return state\r\n\r\n    case 'REMOVE_FRIEND': \r\n      console.log('Sent friend request', action.profile_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'REMOVE_FRIEND_ERROR': \r\n      console.log('Send friend request error', action.err)\r\n      return state\r\n\r\n    case 'ACCEPT_FRIEND': \r\n      console.log('Accepted friend request', action.friend_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'ACCEPT_FRIEND_ERROR': \r\n      console.log('Accept friend request error', action.err)\r\n      return state\r\n\r\n    case 'REJECT_FRIEND': \r\n      console.log('Rejected friend request', action.friend_user_id, action.logged_in_user_id)\r\n      return state\r\n\r\n    case 'REJECT_FRIEND_ERROR': \r\n      console.log('Reject friend request error', action.err)\r\n      return state\r\n\r\n    case 'SPOTIFY_TOKEN': \r\n      console.log('Updated user spotify token', action.uId)\r\n      return state\r\n\r\n    case 'SPOTIFY_TOKEN_ERROR': \r\n      console.log('Update user spotify token error', action.err)\r\n      return state\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default authReducer","\r\nconst initState = {\r\n  posts: [\r\n    {'song': null}\r\n  ]\r\n}\r\n  \r\nconst postReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_POST': \r\n      console.log('Created post:', action.post);\r\n      return state;\r\n\r\n    case 'CREATE_POST_ERROR': \r\n      console.log('Create post error:', action.err);\r\n      return state;\r\n\r\n    //TODO: add functionality for deleting and editing\r\n    /*\r\n    case 'DELETE_POST': \r\n      console.log('Deleted post:', action.project);\r\n      return state;\r\n    case 'DELETE_POST_ERROR': \r\n      console.log('Delete post error:', action.err);\r\n      return state;\r\n    case 'EDIT_POST': \r\n      console.log('Edited post:', action.project);\r\n      return state;\r\n    case 'EDIT_POST_ERROR': \r\n      console.log('Edit post error:', action.err);\r\n      return state;\r\n    */\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer\r\n","import authReducer from './authReducer'\r\nimport postReducer from './postReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  post: postReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\n\r\nexport default rootReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase  } from 'react-redux-firebase';\r\nimport firebase from './config/fbConfig'\r\n\r\n\r\n// Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\r\nconst rrfConfig = {\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n  userProfile: 'users',\r\n  attachAuthIsReady: true,\r\n};\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebase), // Get access to firestore via getFirestore function\r\n));\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}